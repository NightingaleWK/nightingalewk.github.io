{
    "version": "https://jsonfeed.org/version/1",
    "title": "雪漫城的风宅 • All posts by \"代码部署\" tag",
    "description": "この世界は好都合に未完成 だから知りたいんだ —— チ。-地球の運動について-",
    "home_page_url": "https://nightingalewk.cn",
    "items": [
        {
            "id": "https://nightingalewk.cn/2023/07/10/57.%20%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%20laravel%2010%20%E9%A1%B9%E7%9B%AE%E5%88%B0%20ubuntu%2022.04.2%20%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "url": "https://nightingalewk.cn/2023/07/10/57.%20%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%20laravel%2010%20%E9%A1%B9%E7%9B%AE%E5%88%B0%20ubuntu%2022.04.2%20%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "title": "配置并部署 laravel 10 项目到 ubuntu 22.04.2 服务器",
            "date_published": "2023-07-10T06:21:00.000Z",
            "content_html": "<h2 id=\"ubuntu-镜像下载与安装\"><a href=\"#ubuntu-镜像下载与安装\" class=\"headerlink\" title=\"ubuntu 镜像下载与安装\"></a>ubuntu 镜像下载与安装</h2><p>ubuntu 官方可免费下载服务器版本的 iso 镜像文件，我们使用本镜像进行最小化安装即可。我自己的操作是把镜像交给我们公司的网络运维工程师，让他给我那这个镜像开了个虚机，分配了一个内网 IP 用来测试。</p>\n<p>记得跟网络运维工程师说一下让服务器通互联网，再配置一下阿里云的源</p>\n<h2 id=\"系统必要的配置\"><a href=\"#系统必要的配置\" class=\"headerlink\" title=\"系统必要的配置\"></a>系统必要的配置</h2><p>系统默认没初始化 root 账号，使用下方指令初始化：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<p>然后定一个安全好记的密码就行，我们之后的操作都在 root 账号下执行。</p>\n<p>接下来就是升级 ubuntu 系统</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt upgrade</span><br></pre></td></tr></table></figure>\n\n<p>然后我们安装 vim 编辑器，方便编辑文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install vim</span><br></pre></td></tr></table></figure>\n\n<p>然后我们安装 screen 工具，保证我们的操作不因关闭终端而终止</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install screen</span><br></pre></td></tr></table></figure>\n\n<p>至此该配置的都配置好了</p>\n<h2 id=\"安装并配置-oneinstack\"><a href=\"#安装并配置-oneinstack\" class=\"headerlink\" title=\"安装并配置 oneinstack\"></a>安装并配置 oneinstack</h2><p>oneinstack 是一款自动化部署 lnmp 环境的组件工具，百度并访问官网，选择自动安装，选好你需要的配置后，复制好安装的命令，后面用</p>\n<p>安装 lnmp 环境之前，我们新建一个 screen 窗口，保证我们的安装不因窗口关闭而终止：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screen -S lnmp</span><br></pre></td></tr></table></figure>\n\n<p>下面是一些常用操作，可以参考：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl a + d    // 暂退当前的 screen 窗口</span><br><span class=\"line\">screen -r lnmp    // 恢复名为 lnmp 的 screen 窗口</span><br><span class=\"line\">screen -ls    // 查看当前的所有 screen 窗口信息</span><br></pre></td></tr></table></figure>\n\n<p>回到话题，配置好 screen 就可以开始安装 lnmp 环境啦，用上面的你复制的 oneinstack 生成的指令到你的终端，回车，然后等待安装完毕并重启服务器即可。</p>\n<p>此过程一般没问题，若出现报错，安装会终止并提示错误信息，建议重新执行一遍。再有故障那就要自行解决了。</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><p>根据 oneinstack 安装时配置的数据库密码，我们通过访问咱们主机的 ip 进入 oneinstack 默认页面，然后找到 phpmyadmin ，使用 root 和刚才说的密码进入数据库中，新建一个所需的空白数据库。</p>\n<h2 id=\"部署项目\"><a href=\"#部署项目\" class=\"headerlink\" title=\"部署项目\"></a>部署项目</h2><p>假设你的 laravel 10 项目在 github 中，代码通过 git 进行版本控制。</p>\n<p>接下来我们前往网站目录，并将代码 clone 到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /date/wwwroot</span><br><span class=\"line\">mv default default_back</span><br><span class=\"line\">git clone [ 你的远端 git 地址 ] jiepade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"php-配置\"><a href=\"#php-配置\" class=\"headerlink\" title=\"php 配置\"></a>php 配置</h2><p>我们需要将部分的 php 默认禁用的函数方法打开，方便使用诸如 composer 之类的命令，具体操作为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/php/etc/</span><br><span class=\"line\">vim php.ini</span><br></pre></td></tr></table></figure>\n\n<p>然后找到如下这行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; This directive allows you to disable certain functions.</span><br><span class=\"line\">; It receives a comma-delimited list of function names.</span><br><span class=\"line\">; https://php.net/disable-functions</span><br><span class=\"line\">disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen</span><br></pre></td></tr></table></figure>\n\n<p>修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,ini_alter,ini_restore,dl,readlink,popepassthru,stream_socket_server,fsocket,popen</span><br></pre></td></tr></table></figure>\n\n<p>保存退出后，重启 php—fpm 服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php-fpm restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"composer-安装与执行\"><a href=\"#composer-安装与执行\" class=\"headerlink\" title=\"composer 安装与执行\"></a>composer 安装与执行</h2><p>回到项目根目录，安装 composer，若已安装，直接配置下一步</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r &quot;copy(&#x27;https://install.phpcomposer.com/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span><br><span class=\"line\">php composer-setup.php</span><br><span class=\"line\">mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure>\n\n<p>若以上指令报错 php 无法找到，请检查path路径是否添加了php的bin目录，具体百度即可。不可能是没装 php，oneinstack 已经给你装好了，这个问题基本上是ubuntu下一般账号能跑 php，但 root 不行。小问题的。</p>\n<p>我们不使用阿里云的 composer 镜像，因为国内镜像的composer各依赖版本不够新，影响使用，用国外原版镜像慢点，但是稳定且最新。</p>\n<p>安装好后，在项目根目录执行 composer i 指令，安装项目所需的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer i</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"laravel-初始化配置\"><a href=\"#laravel-初始化配置\" class=\"headerlink\" title=\"laravel 初始化配置\"></a>laravel 初始化配置</h2><p>接下来就可以进行基础的 laravel 配置了，首先我们复制根目录下的 .env 一份出来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp .env.example .env</span><br></pre></td></tr></table></figure>\n\n<p>然后生成密钥</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan key:generate</span><br></pre></td></tr></table></figure>\n\n<p>然后修改 .env 为项目实际需要调整的内容，具体需要咨询开发人员要改哪些。</p>\n<p>完成上述环节后，就可以进行数据库填充工作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate:refresh --seed &amp;&amp; php artisan admin:install </span><br></pre></td></tr></table></figure>\n\n<p>之后你可能需要借助数据库程序，连接到服务器，把一些你备份的项目初始化数据库填充到项目中，具体自行操作即可，推荐使用 Dbeaver，开源且免费，官方也在更新，别用盗版的 navicat 辣</p>\n<h2 id=\"配置-nginx\"><a href=\"#配置-nginx\" class=\"headerlink\" title=\"配置 nginx\"></a>配置 nginx</h2><p>这时候你访问网址是无法看到你的项目的，需要对 nginx 配置，首先找到配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/conf/</span><br><span class=\"line\">vim nginx.conf</span><br></pre></td></tr></table></figure>\n<p>修改如下的几个值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">######################## default ############################</span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    listen 2333;             &lt;------------------here,change it</span><br><span class=\"line\">    server_name _;</span><br><span class=\"line\">    access_log /data/wwwlogs/access_nginx.log combined;</span><br><span class=\"line\">    root /data/wwwroot/default/public;             &lt;------------------here,change it</span><br><span class=\"line\">    index index.html index.htm index.php;</span><br><span class=\"line\">    #error_page 404 /404.html;</span><br><span class=\"line\">    #error_page 502 /502.html;</span><br><span class=\"line\">    location /nginx_status &#123;</span><br><span class=\"line\">      stub_status on;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">      allow 127.0.0.1;</span><br><span class=\"line\">      deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ [^/]\\.php(/|$) &#123;</span><br><span class=\"line\">      #fastcgi_pass remote_php_ip:9000;</span><br><span class=\"line\">      fastcgi_pass unix:/dev/shm/php-cgi.sock;</span><br><span class=\"line\">      fastcgi_index index.php;</span><br><span class=\"line\">      include fastcgi.conf;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;</span><br><span class=\"line\">      expires 30d;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ .*\\.(js|css)?$ &#123;</span><br><span class=\"line\">      expires 7d;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ ^/(\\.user.ini|\\.ht|\\.git|\\.svn|\\.project|LICENSE|README.md) &#123;</span><br><span class=\"line\">      deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /.well-known &#123;</span><br><span class=\"line\">      allow all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location / &#123;             &lt;------------------here,add it</span><br><span class=\"line\">      try_files $uri $uri/ /index.php?$query_string;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>保存退出后，重启 nginx 使之生效</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件权限调整\"><a href=\"#文件权限调整\" class=\"headerlink\" title=\"文件权限调整\"></a>文件权限调整</h2><p>我们需要对项目的文件提权，允许项目进行诸如存储文件等操作。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 default</span><br><span class=\"line\">chown -R www-data:www-data default</span><br><span class=\"line\"></span><br><span class=\"line\">cd default</span><br><span class=\"line\">chgrp -R www storage bootstrap/cache</span><br><span class=\"line\">chmod -R ug+rwx storage bootstrap/cache</span><br></pre></td></tr></table></figure>\n\n<p>之后访问 http:&#x2F;&#x2F;[你的 IP 地址]:2333&#x2F; 就可以看到你的项目辣，项目部署到此结束</p>\n",
            "tags": [
                "代码部署"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2021/06/08/23.%20Laravel%20%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%B5%81%E7%A8%8B/",
            "url": "https://nightingalewk.cn/2021/06/08/23.%20Laravel%20%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%B5%81%E7%A8%8B/",
            "title": "laravel 项目部署到服务器的流程",
            "date_published": "2021-06-08T04:00:00.000Z",
            "content_html": "<h1 id=\"新建虚拟站点\"><a href=\"#新建虚拟站点\" class=\"headerlink\" title=\"新建虚拟站点\"></a>新建虚拟站点</h1><p>进入到 oneinstack 根目录，输入 <code>./vhost</code> 新建虚拟主机，在开始之前首先申请好指向本测试服务器的域名，ssl 证书可使用 oneinstack 自动生成并自动续期，一路完成后会有如下提示即可</p>\n<p>&#x2F;&#x2F; #######################################################################<br>&#x2F;&#x2F; #       OneinStack for CentOS&#x2F;RedHat 6+ Debian 8+ and Ubuntu 14+      #<br>&#x2F;&#x2F; #       For more information please visit <a href=\"https://oneinstack.com/\">https://oneinstack.com</a>      #<br>&#x2F;&#x2F; #######################################################################<br>&#x2F;&#x2F; Your domain:                  yanji.wkarrow.top<br>&#x2F;&#x2F; Virtualhost conf:             &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;vhost&#x2F;yanji.wkarrow.top.conf<br>&#x2F;&#x2F; Directory of:                 &#x2F;data&#x2F;wwwroot&#x2F;yanji.wkarrow.top<br>&#x2F;&#x2F; Rewrite rule:                 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;rewrite&#x2F;laravel.conf<br>&#x2F;&#x2F; Let’s Encrypt SSL Certificate:&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;ssl&#x2F;yanji.wkarrow.top.crt<br>&#x2F;&#x2F; SSL Private Key:              &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;ssl&#x2F;yanji.wkarrow.top.key</p>\n<h1 id=\"git-clone-拷贝线上仓库数据到本地\"><a href=\"#git-clone-拷贝线上仓库数据到本地\" class=\"headerlink\" title=\"git clone 拷贝线上仓库数据到本地\"></a>git clone 拷贝线上仓库数据到本地</h1><p>cd 到 <code>/date/wwwroot/yanji.wkarrow.top</code> 目录中，执行<br> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer update</span><br><span class=\"line\">php artisan key:generate</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"修改-env-文件\"><a href=\"#修改-env-文件\" class=\"headerlink\" title=\"修改 .env 文件\"></a>修改 .env 文件</h1><p>在项目根目录下执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp .env.example .env</span><br></pre></td></tr></table></figure>\n<p>之后 <code>vim .env</code> 配置站点数据</p>\n<h1 id=\"修改站点权限\"><a href=\"#修改站点权限\" class=\"headerlink\" title=\"修改站点权限\"></a>修改站点权限</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 yanji.wkarrow.top</span><br><span class=\"line\">chown -R www-data:www-data yanji.wkarrow.top</span><br><span class=\"line\"></span><br><span class=\"line\">cd yanji,wkarrow.top</span><br><span class=\"line\">chgrp -R www storage bootstrap/cache</span><br><span class=\"line\">chmod -R ug+rwx storage bootstrap/cache</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修改-nginx-配置\"><a href=\"#修改-nginx-配置\" class=\"headerlink\" title=\"修改 nginx 配置\"></a>修改 nginx 配置</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/conf/vhost</span><br><span class=\"line\">vim yanji.wkarrow.top.conf</span><br><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h1><p>前往 oneinstack 自带的 phpMyAdmin 新建一个名为“岩脊”数据库</p>\n<h1 id=\"数据库迁移\"><a href=\"#数据库迁移\" class=\"headerlink\" title=\"数据库迁移\"></a>数据库迁移</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure>",
            "tags": [
                "代码部署",
                "oneinstack",
                "lnmp"
            ]
        }
    ]
}