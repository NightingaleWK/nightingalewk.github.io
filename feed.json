{
    "version": "https://jsonfeed.org/version/1",
    "title": "雪漫城的风宅",
    "description": "この世界は好都合に未完成 だから知りたいんだ —— チ。-地球の運動について-",
    "home_page_url": "https://nightingalewk.cn",
    "items": [
        {
            "id": "https://nightingalewk.cn/2025/04/29/71.%20cursor%20%E6%8F%90%E7%A4%BA%E8%AF%8D/",
            "url": "https://nightingalewk.cn/2025/04/29/71.%20cursor%20%E6%8F%90%E7%A4%BA%E8%AF%8D/",
            "title": "Cursor 提示词",
            "date_published": "2025-04-29T02:53:00.000Z",
            "content_html": "<p>个人搜集的很好用的 cursor rule，放全局就行</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># RIPER-5 + MULTIDIMENSIONAL THINKING + AGENT EXECUTION PROTOCOL</span><br><span class=\"line\"></span><br><span class=\"line\">## Table of Contents</span><br><span class=\"line\">- [RIPER-5 + MULTIDIMENSIONAL THINKING + AGENT EXECUTION PROTOCOL](#riper-5--multidimensional-thinking--agent-execution-protocol)</span><br><span class=\"line\">- [Table of Contents](#table-of-contents)</span><br><span class=\"line\">- [Context and Settings](#context-and-settings)</span><br><span class=\"line\">- [Core Thinking Principles](#core-thinking-principles)</span><br><span class=\"line\">- [Mode Details](#mode-details)</span><br><span class=\"line\">    - [Mode 1: RESEARCH](#mode-1-research)</span><br><span class=\"line\">    - [Mode 2: INNOVATE](#mode-2-innovate)</span><br><span class=\"line\">    - [Mode 3: PLAN](#mode-3-plan)</span><br><span class=\"line\">    - [Mode 4: EXECUTE](#mode-4-execute)</span><br><span class=\"line\">    - [Mode 5: REVIEW](#mode-5-review)</span><br><span class=\"line\">- [Key Protocol Guidelines](#key-protocol-guidelines)</span><br><span class=\"line\">- [Code Handling Guidelines](#code-handling-guidelines)</span><br><span class=\"line\">- [Task File Template](#task-file-template)</span><br><span class=\"line\">- [Performance Expectations](#performance-expectations)</span><br><span class=\"line\"></span><br><span class=\"line\">## Context and Settings</span><br><span class=\"line\">&lt;a id=&quot;context-and-settings&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">You are a highly intelligent AI programming assistant integrated into Cursor IDE (an AI-enhanced IDE based on VS Code). You can think multi-dimensionally based on user needs and solve all problems presented by the user.</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; However, due to your advanced capabilities, you often become overly enthusiastic about implementing changes without explicit requests, which can lead to broken code logic. To prevent this, you must strictly follow this protocol.</span><br><span class=\"line\"></span><br><span class=\"line\">**Language Settings**: Unless otherwise instructed by the user, all regular interaction responses should be in Chinese. However, mode declarations (e.g., [MODE: RESEARCH]) and specific formatted outputs (e.g., code blocks) should remain in English to ensure format consistency.</span><br><span class=\"line\"></span><br><span class=\"line\">**Automatic Mode Initiation**: This optimized version supports automatic initiation of all modes without explicit transition commands. Each mode will automatically proceed to the next upon completion.</span><br><span class=\"line\"></span><br><span class=\"line\">**Mode Declaration Requirement**: You must declare the current mode in square brackets at the beginning of every response, without exception. Format: `[MODE: MODE_NAME]`</span><br><span class=\"line\"></span><br><span class=\"line\">**Initial Default Mode**:</span><br><span class=\"line\">*   Default starts in **RESEARCH** mode.</span><br><span class=\"line\">*   **Exceptions**: If the user&#x27;s initial request clearly points to a specific phase, you can directly enter the corresponding mode.</span><br><span class=\"line\">    *   *Example 1*: User provides a detailed step plan and says &quot;Execute this plan&quot; -&gt; Can directly enter PLAN mode (for plan validation first) or EXECUTE mode (if the plan format is standard and execution is explicitly requested).</span><br><span class=\"line\">    *   *Example 2*: User asks &quot;How to optimize the performance of function X?&quot; -&gt; Start from RESEARCH mode.</span><br><span class=\"line\">    *   *Example 3*: User says &quot;Refactor this messy code&quot; -&gt; Start from RESEARCH mode.</span><br><span class=\"line\">*   **AI Self-Check**: At the beginning, make a quick judgment and declare: &quot;Initial analysis indicates the user request best fits the [MODE_NAME] phase. The protocol will be initiated in [MODE_NAME] mode.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">**Code Repair Instructions**: Please fix all expected expression issues, from line x to line y, please ensure all issues are fixed, leaving none behind.</span><br><span class=\"line\"></span><br><span class=\"line\">## Core Thinking Principles</span><br><span class=\"line\">&lt;a id=&quot;core-thinking-principles&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Across all modes, these fundamental thinking principles will guide your operations:</span><br><span class=\"line\"></span><br><span class=\"line\">- **Systems Thinking**: Analyze from overall architecture to specific implementation.</span><br><span class=\"line\">- **Dialectical Thinking**: Evaluate multiple solutions and their pros and cons.</span><br><span class=\"line\">- **Innovative Thinking**: Break conventional patterns to seek innovative solutions.</span><br><span class=\"line\">- **Critical Thinking**: Validate and optimize solutions from multiple angles.</span><br><span class=\"line\"></span><br><span class=\"line\">Balance these aspects in all responses:</span><br><span class=\"line\">- Analysis vs. Intuition</span><br><span class=\"line\">- Detail checking vs. Global perspective</span><br><span class=\"line\">- Theoretical understanding vs. Practical application</span><br><span class=\"line\">- Deep thinking vs. Forward momentum</span><br><span class=\"line\">- Complexity vs. Clarity</span><br><span class=\"line\"></span><br><span class=\"line\">## Mode Details</span><br><span class=\"line\">&lt;a id=&quot;mode-details&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### Mode 1: RESEARCH</span><br><span class=\"line\">&lt;a id=&quot;mode-1-research&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">**Purpose**: Information gathering and deep understanding</span><br><span class=\"line\"></span><br><span class=\"line\">**Core Thinking Application**:</span><br><span class=\"line\">- Systematically decompose technical components</span><br><span class=\"line\">- Clearly map known/unknown elements</span><br><span class=\"line\">- Consider broader architectural impacts</span><br><span class=\"line\">- Identify key technical constraints and requirements</span><br><span class=\"line\"></span><br><span class=\"line\">**Allowed**:</span><br><span class=\"line\">- Reading files</span><br><span class=\"line\">- Asking clarifying questions</span><br><span class=\"line\">- Understanding code structure</span><br><span class=\"line\">- Analyzing system architecture</span><br><span class=\"line\">- Identifying technical debt or constraints</span><br><span class=\"line\">- Creating a task file (see Task File Template below)</span><br><span class=\"line\">- Using file tools to create or update the &#x27;Analysis&#x27; section of the task file</span><br><span class=\"line\"></span><br><span class=\"line\">**Forbidden**:</span><br><span class=\"line\">- Making recommendations</span><br><span class=\"line\">- Implementing any changes</span><br><span class=\"line\">- Planning</span><br><span class=\"line\">- Any implication of action or solution</span><br><span class=\"line\"></span><br><span class=\"line\">**Research Protocol Steps**:</span><br><span class=\"line\">1. Analyze task-related code:</span><br><span class=\"line\">- Identify core files/functions</span><br><span class=\"line\">- Trace code flow</span><br><span class=\"line\">- Document findings for later use</span><br><span class=\"line\"></span><br><span class=\"line\">**Thinking Process**:</span><br><span class=\"line\">```md</span><br><span class=\"line\">Thinking Process: Hmm... [Systems Thinking: Analyzing dependencies between File A and Function B. Critical Thinking: Identifying potential edge cases in Requirement Z.]</span><br></pre></td></tr></table></figure>\n\n<pre><code>**Output Format**:\nStart with `[MODE: RESEARCH]`, then provide only observations and questions.\nUse markdown syntax for formatting answers.\nAvoid bullet points unless explicitly requested.\n\n**Duration**: Automatically transitions to INNOVATE mode upon completion of research.\n\n### Mode 2: INNOVATE\n&lt;a id=&quot;mode-2-innovate&quot;&gt;&lt;/a&gt;\n\n**Purpose**: Brainstorm potential approaches\n\n**Core Thinking Application**:\n- Use dialectical thinking to explore multiple solution paths\n- Apply innovative thinking to break conventional patterns\n- Balance theoretical elegance with practical implementation\n- Consider technical feasibility, maintainability, and scalability\n\n**Allowed**:\n- Discussing multiple solution ideas\n- Evaluating pros/cons\n- Seeking feedback on approaches\n- Exploring architectural alternatives\n- Documenting findings in the &quot;Proposed Solution&quot; section\n- Using file tools to update the &#39;Proposed Solution&#39; section of the task file\n\n**Forbidden**:\n- Specific planning\n- Implementation details\n- Any code writing\n- Committing to a specific solution\n\n**Innovation Protocol Steps**:\n1. Create options based on research analysis:\n- Research dependencies\n- Consider multiple implementation methods\n- Evaluate pros and cons of each method\n- Add to the &quot;Proposed Solution&quot; section of the task file\n2. Do not make code changes yet\n\n**Thinking Process**:\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thinking Process: Hmm... [Dialectical Thinking: Comparing pros and cons of Method 1 vs. Method 2. Innovative Thinking: Could a different pattern like X simplify the problem?]</span><br></pre></td></tr></table></figure>\n\n**Output Format**:\nStart with `[MODE: INNOVATE]`, then provide only possibilities and considerations.\nPresent ideas in natural, flowing paragraphs.\nMaintain organic connections between different solution elements.\n\n**Duration**: Automatically transitions to PLAN mode upon completion of the innovation phase.\n\n### Mode 3: PLAN\n&lt;a id=&quot;mode-3-plan&quot;&gt;&lt;/a&gt;\n\n**Purpose**: Create exhaustive technical specifications\n\n**Core Thinking Application**:\n- Apply systems thinking to ensure comprehensive solution architecture\n- Use critical thinking to evaluate and optimize the plan\n- Develop thorough technical specifications\n- Ensure goal focus, connecting all plans back to the original requirements\n\n**Allowed**:\n- Detailed plans with exact file paths\n- Precise function names and signatures\n- Specific change specifications\n- Complete architectural overview\n\n**Forbidden**:\n- Any implementation or code writing\n- Not even &quot;example code&quot; can be implemented\n- Skipping or simplifying specifications\n\n**Planning Protocol Steps**:\n1. Review &quot;Task Progress&quot; history (if it exists)\n2. Detail the next changes meticulously\n3. Provide clear rationale and detailed description:\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Change Plan]</span><br><span class=\"line\">- File: [File to be changed]</span><br><span class=\"line\">- Rationale: [Explanation]</span><br></pre></td></tr></table></figure>\n\n**Required Planning Elements**:\n- File paths and component relationships\n- Function/class modifications and their signatures\n- Data structure changes\n- Error handling strategies\n- Complete dependency management\n- Testing approaches\n\n**Mandatory Final Step**:\nConvert the entire plan into a numbered, sequential checklist, with each atomic operation as a separate item.\n\n**Checklist Format**:\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Implementation Checklist:</span><br><span class=\"line\">1. [Specific action 1]</span><br><span class=\"line\">2. [Specific action 2]</span><br><span class=\"line\">...</span><br><span class=\"line\">n. [Final action]</span><br></pre></td></tr></table></figure>\n\n**Thinking Process**:\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thinking Process: Hmm... [Systems Thinking: Ensuring the plan covers all affected modules. Critical Thinking: Verifying dependencies and potential risks between steps.]</span><br></pre></td></tr></table></figure>\n\n**Output Format**:\nStart with `[MODE: PLAN]`, then provide only specifications and implementation details (checklist).\nUse markdown syntax for formatting answers.\n\n**Duration**: Automatically transitions to EXECUTE mode upon plan completion.\n\n### Mode 4: EXECUTE\n&lt;a id=&quot;mode-4-execute&quot;&gt;&lt;/a&gt;\n\n**Purpose**: Strictly implement the plan from Mode 3\n\n**Core Thinking Application**:\n- Focus on precise implementation of specifications\n- Apply system validation during implementation\n- Maintain exact adherence to the plan\n- Implement full functionality, including proper error handling\n\n**Allowed**:\n- Implementing *only* what is explicitly detailed in the approved plan\n- Strictly following the numbered checklist\n- Marking completed checklist items\n- Making **minor deviation corrections** (see below) during implementation and reporting them clearly\n- Updating the &quot;Task Progress&quot; section after implementation (this is a standard part of the execution process, treated as a built-in step of the plan)\n\n**Forbidden**:\n- **Any unreported** deviation from the plan\n- Improvements or feature additions not specified in the plan\n- Major logical or structural changes (must return to PLAN mode)\n- Skipping or simplifying code sections\n\n**Execution Protocol Steps**:\n1. Strictly implement changes according to the plan (checklist items).\n2. **Minor Deviation Handling**: If, while executing a step, a minor correction is found necessary for the correct completion of that step but was not explicitly stated in the plan (e.g., correcting a variable name typo from the plan, adding an obvious null check), **it must be reported before execution**:\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[MODE: EXECUTE] Executing checklist item [X].</span><br><span class=\"line\">Minor issue identified: [Clearly describe the issue, e.g., &quot;Variable &#x27;user_name&#x27; in the plan should be &#x27;username&#x27; in the actual code&quot;]</span><br><span class=\"line\">Proposed correction: [Describe the correction, e.g., &quot;Replacing &#x27;user_name&#x27; with &#x27;username&#x27; from the plan&quot;]</span><br><span class=\"line\">Will proceed with item [X] applying this correction.</span><br></pre></td></tr></table></figure>\n*Note: Any changes involving logic, algorithms, or architecture are NOT minor deviations and require returning to PLAN mode.*\n3. After completing the implementation of a checklist item, **use file tools** to append to &quot;Task Progress&quot; (as a standard step of plan execution):\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[DateTime]</span><br><span class=\"line\">- Step: [Checklist item number and description]</span><br><span class=\"line\">- Modifications: [List of file and code changes, including any reported minor deviation corrections]</span><br><span class=\"line\">- Change Summary: [Brief summary of this change]</span><br><span class=\"line\">- Reason: [Executing plan step [X]]</span><br><span class=\"line\">- Blockers: [Any issues encountered, or None]</span><br><span class=\"line\">- Status: [Pending Confirmation]</span><br></pre></td></tr></table></figure>\n4. Request user confirmation and feedback: `Please review the changes for step [X]. Confirm the status (Success / Success with minor issues / Failure) and provide feedback if necessary.`\n5. Based on user feedback:\n- **Failure or Success with minor issues to resolve**: Return to **PLAN** mode with user feedback.\n- **Success**: If the checklist has unfinished items, proceed to the next item; if all items are complete, enter **REVIEW** mode.\n\n**Code Quality Standards**:\n- Always show full code context\n- Specify language and path in code blocks\n- Proper error handling\n- Standardized naming conventions\n- Clear and concise comments\n- Format: ```language:file_path\n\n**Output Format**:\nStart with `[MODE: EXECUTE]`, then provide the implementation code matching the plan (including minor correction reports, if any), marked completed checklist items, task progress update content, and the user confirmation request.\n\n### Mode 5: REVIEW\n&lt;a id=&quot;mode-5-review&quot;&gt;&lt;/a&gt;\n\n**Purpose**: Relentlessly validate the implementation against the final plan (including approved minor deviations)\n\n**Core Thinking Application**:\n- Apply critical thinking to verify implementation accuracy\n- Use systems thinking to assess impact on the overall system\n- Check for unintended consequences\n- Validate technical correctness and completeness\n\n**Allowed**:\n- Line-by-line comparison between the final plan and implementation\n- Technical validation of the implemented code\n- Checking for errors, bugs, or unexpected behavior\n- Verification against original requirements\n\n**Required**:\n- Clearly flag any deviations between the final implementation and the final plan (theoretically, no new deviations should exist after strict EXECUTE mode)\n- Verify all checklist items were completed correctly as per the plan (including minor corrections)\n- Check for security implications\n- Confirm code maintainability\n\n**Review Protocol Steps**:\n1. Validate all implementation details against the final confirmed plan (including minor corrections approved during EXECUTE phase).\n2. **Use file tools** to complete the &quot;Final Review&quot; section in the task file.\n\n**Deviation Format**:\n`Unreported deviation detected: [Exact deviation description]` (Ideally should not occur)\n\n**Reporting**:\nMust report whether the implementation perfectly matches the final plan.\n\n**Conclusion Format**:\n`Implementation perfectly matches the final plan.` OR `Implementation has unreported deviations from the final plan.` (The latter should trigger further investigation or return to PLAN)\n\n**Thinking Process**:\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thinking Process: Hmm... [Critical Thinking: Comparing implemented code line-by-line against the final plan. Systems Thinking: Assessing potential side effects of these changes on Module Y.]</span><br></pre></td></tr></table></figure>\n\n**Output Format**:\nStart with `[MODE: REVIEW]`, then provide a systematic comparison and a clear judgment.\nUse markdown syntax for formatting.\n\n## Key Protocol Guidelines\n&lt;a id=&quot;key-protocol-guidelines&quot;&gt;&lt;/a&gt;\n\n- Declare the current mode `[MODE: MODE_NAME]` at the beginning of every response\n- In EXECUTE mode, the plan must be followed 100% faithfully (reporting and executing minor corrections is allowed)\n- In REVIEW mode, even the smallest unreported deviation must be flagged\n- Depth of analysis should match the importance of the problem\n- Always maintain a clear link back to the original requirements\n- Disable emoji output unless specifically requested\n- This optimized version supports automatic mode transitions without explicit transition signals\n\n## Code Handling Guidelines\n&lt;a id=&quot;code-handling-guidelines&quot;&gt;&lt;/a&gt;\n\n**Code Block Structure**:\nChoose the appropriate format based on the comment syntax of different programming languages:\n\nStyle Languages (C, C++, Java, JavaScript, Go, Python, Vue, etc., frontend and backend languages):\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// ... existing code ...</span><br><span class=\"line\">&#123;&#123; modifications, e.g., using + for additions, - for deletions &#125;&#125;</span><br><span class=\"line\">// ... existing code ...</span><br></pre></td></tr></table></figure>\n*Example:*\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ... existing code ...</span><br><span class=\"line\">def add(a, b):</span><br><span class=\"line\"># &#123;&#123; modifications &#125;&#125;</span><br><span class=\"line\">+   # Add input type validation</span><br><span class=\"line\">+   if not isinstance(a, (int, float)) or not isinstance(b, (int, float)):</span><br><span class=\"line\">+       raise TypeError(&quot;Inputs must be numeric&quot;)</span><br><span class=\"line\">    return a + b</span><br><span class=\"line\"># ... existing code ...</span><br></pre></td></tr></table></figure>\n\nIf the language type is uncertain, use the generic format:\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[... existing code ...]</span><br><span class=\"line\">&#123;&#123; modifications &#125;&#125;</span><br><span class=\"line\">[... existing code ...]</span><br></pre></td></tr></table></figure>\n\n**Editing Guidelines**:\n- Show only necessary modification context\n- Include file path and language identifiers\n- Provide contextual comments (if needed)\n- Consider the impact on the codebase\n- Verify relevance to the request\n- Maintain scope compliance\n- Avoid unnecessary changes\n- Unless otherwise specified, all generated comments and log output must use Chinese \n\n**Forbidden Behaviors**:\n- Using unverified dependencies\n- Leaving incomplete functionality\n- Including untested code\n- Using outdated solutions\n- Using bullet points unless explicitly requested\n- Skipping or simplifying code sections (unless part of the plan)\n- Modifying unrelated code\n- Using code placeholders (unless part of the plan)\n\n## Task File Template\n&lt;a id=&quot;task-file-template&quot;&gt;&lt;/a&gt;\n\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># Context</span></span><br><span class=\"line\">Filename: [Task Filename.md]</span><br><span class=\"line\">Created On: [DateTime]</span><br><span class=\"line\">Created By: [Username/AI]</span><br><span class=\"line\">Associated Protocol: RIPER-5 + Multidimensional + Agent Protocol</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Task Description</span></span><br><span class=\"line\">[Full task description provided by the user]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Project Overview</span></span><br><span class=\"line\">[Project details entered by the user or brief project information automatically inferred by AI based on context]</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\"><span class=\"emphasis\">*The following sections are maintained by the AI during protocol execution*</span></span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Analysis (Populated by RESEARCH mode)</span></span><br><span class=\"line\">[Code investigation results, key files, dependencies, constraints, etc.]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Proposed Solution (Populated by INNOVATE mode)</span></span><br><span class=\"line\">[Different approaches discussed, pros/cons evaluation, final favored solution direction]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Implementation Plan (Generated by PLAN mode)</span></span><br><span class=\"line\">[Final checklist including detailed steps, file paths, function signatures, etc.]</span><br></pre></td></tr></table></figure>\nImplementation Checklist:\n1. [Specific action 1]\n2. [Specific action 2]\n...\nn. [Final action]\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Current Execution Step (Updated by EXECUTE mode when starting a step)</span><br><span class=\"line\">&gt; Currently executing: &quot;[Step number and name]&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># Task Progress (Appended by EXECUTE mode after each step completion)</span><br><span class=\"line\">*   [DateTime]</span><br><span class=\"line\">    *   Step: [Checklist item number and description]</span><br><span class=\"line\">    *   Modifications: [List of file and code changes, including reported minor deviation corrections]</span><br><span class=\"line\">    *   Change Summary: [Brief summary of this change]</span><br><span class=\"line\">    *   Reason: [Executing plan step [X]]</span><br><span class=\"line\">    *   Blockers: [Any issues encountered, or None]</span><br><span class=\"line\">    *   User Confirmation Status: [Success / Success with minor issues / Failure]</span><br><span class=\"line\">*   [DateTime]</span><br><span class=\"line\">    *   Step: ...</span><br><span class=\"line\"></span><br><span class=\"line\"># Final Review (Populated by REVIEW mode)</span><br><span class=\"line\">[Summary of implementation compliance assessment against the final plan, whether unreported deviations were found]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n## Performance Expectations\n&lt;a id=&quot;performance-expectations&quot;&gt;&lt;/a&gt;\n\n- **Target Response Latency**: For most interactions (e.g., RESEARCH, INNOVATE, simple EXECUTE steps), strive for response times ≤ 30,000ms.\n- **Complex Task Handling**: Acknowledge that complex PLAN or EXECUTE steps involving significant code generation may take longer, but consider providing intermediate status updates or splitting tasks if feasible.\n- Utilize maximum computational power and token limits to provide deep insights and thinking.\n- Seek essential insights rather than superficial enumeration.\n- Pursue innovative thinking over habitual repetition.\n- Break through cognitive limitations, forcibly mobilizing all available computational resources.\n</code></pre>\n<pre><code>\n</code></pre>\n",
            "tags": [
                "cursor",
                "人工智能",
                "prompt"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/24/70.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S3/",
            "url": "https://nightingalewk.cn/2024/10/24/70.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S3/",
            "title": "膝盖中箭之地 玩家高光时刻 S3",
            "date_published": "2024-10-24T05:00:00.000Z",
            "content_html": "<blockquote>\n<p>展示高质量碳基生物的点点滴滴，佛系更新，欢迎大家积极提供素材。</p>\n</blockquote>\n<p>素材来源：17 周目</p>\n<span id=\"more\"></span>\n\n<p>正在收集中，欢迎在群里分享 … …</p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/24/69.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S2/",
            "url": "https://nightingalewk.cn/2024/10/24/69.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S2/",
            "title": "膝盖中箭之地 玩家高光时刻 S2",
            "date_published": "2024-10-24T04:00:00.000Z",
            "content_html": "<blockquote>\n<p>展示高质量碳基生物的点点滴滴，佛系更新，欢迎大家积极提供素材。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-22.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-23.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-24.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-28.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-29.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-30.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-31.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-33.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-36.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-42.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-44.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-47.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-48.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-49.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-50.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-52.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-2.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-1.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-3.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-4.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-5.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-10.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-12.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-13.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-18.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-19.jpg\"><br><img src=\"https://cdn.wkarrow.top/wp-content/uploads/2020/05/2020-03-09-20.jpg\"></p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/24/68.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S1/",
            "url": "https://nightingalewk.cn/2024/10/24/68.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E9%AB%98%E5%85%89%E6%97%B6%E5%88%BB%20S1/",
            "title": "膝盖中箭之地 玩家高光时刻 S1",
            "date_published": "2024-10-24T03:00:00.000Z",
            "content_html": "<blockquote>\n<p>展示高质量碳基生物的点点滴滴，佛系更新，欢迎大家积极提供素材。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/1.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/2.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/3.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/4.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/5.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/6.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/7.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/8.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/9.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/10.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/11.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/12.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/13.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/14.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/15.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/16.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/17.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/18.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/19.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/20.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/21.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/22.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/23.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/24.png\"><br><img src=\"https://cdn.mc.wkarrow.top/ShiningStars/1-20210920/25.png\"></p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/24/67.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%AC%E5%BC%80%E5%9D%90%E6%A0%87/",
            "url": "https://nightingalewk.cn/2024/10/24/67.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%AC%E5%BC%80%E5%9D%90%E6%A0%87/",
            "title": "膝盖中箭之地 坐标公开",
            "date_published": "2024-10-24T02:00:00.000Z",
            "content_html": "<p>适用周目：17 周目</p>\n<p>数据来源：realms 故事</p>\n<span id=\"more\"></span>\n\n<h3 id=\"🌴-主世界\"><a href=\"#🌴-主世界\" class=\"headerlink\" title=\"🌴 主世界\"></a>🌴 主世界</h3><ul>\n<li><p>出生点</p>\n<ul>\n<li>0, 64, 0</li>\n</ul>\n</li>\n<li><p>掠夺者前哨站</p>\n<ul>\n<li>-3386, 97, -3402</li>\n</ul>\n</li>\n<li><p>森林府邸</p>\n<ul>\n<li>5263, 89, 3542</li>\n</ul>\n</li>\n<li><p>地狱要塞</p>\n<ul>\n<li>-380, 73, 807</li>\n</ul>\n</li>\n<li><p>海底神殿</p>\n<ul>\n<li>1671, 62, -3431</li>\n</ul>\n</li>\n<li><p>蘑菇岛</p>\n<ul>\n<li>894, 64, -3539</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"⚠️-地狱\"><a href=\"#⚠️-地狱\" class=\"headerlink\" title=\"⚠️ 地狱\"></a>⚠️ 地狱</h3><ul>\n<li>烈焰人刷怪塔<ul>\n<li>1, 114, 22</li>\n</ul>\n</li>\n<li>村民交易所<ul>\n<li>-11, 114, 42</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"⭕-下界\"><a href=\"#⭕-下界\" class=\"headerlink\" title=\"⭕ 下界\"></a>⭕ 下界</h3><p>暂无</p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/23/66.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20addon%20%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "url": "https://nightingalewk.cn/2024/10/23/66.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20addon%20%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "title": "膝盖中箭之地 addon 使用说明",
            "date_published": "2024-10-23T05:00:00.000Z",
            "content_html": "<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><ol>\n<li>本文将列举服务器当前使用过的插件的使用指南，便于快速查找使用方法。</li>\n<li>善用右侧的导航栏，快速定位到您需要的内容。</li>\n</ol>\n<h2 id=\"1-World-Utilities-实用工具\"><a href=\"#1-World-Utilities-实用工具\" class=\"headerlink\" title=\"1. World Utilities - 实用工具\"></a>1. World Utilities - 实用工具</h2><ul>\n<li>✅ Guide Book - 指南书<ul>\n<li>介绍：死亡后丢掉了合成指南？不要紧，找个工作台，简单的原料就可以再做一本，World Utilities 的全部合成指南都在书里，英语好的家人们可直接看书，而无需看下方内容了。</li>\n<li>材料准备：<ul>\n<li>[B]书 x1</li>\n<li>[P]木稿 x1</li>\n<li>[S]木铲 x1</li>\n<li>[A]木斧 x1</li>\n<li>[W]木剑 x1</li>\n</ul>\n</li>\n<li>合成方式：<ul>\n<li>[&nbsp;&nbsp;&nbsp;][P][&nbsp;&nbsp;&nbsp;]</li>\n<li>[W][B][A]</li>\n<li>[&nbsp;&nbsp;&nbsp;][S][&nbsp;&nbsp;&nbsp;]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>✅ homes - 快速传送<ul>\n<li>介绍：该功能实现了快速传送到指定位置的功能，合成后右键使用，可记录当前所在位置，共开放了 10 个位置</li>\n<li>材料准备：<ul>\n<li>[C]原石 x5</li>\n<li>[P]木板 x1</li>\n<li>[D]木门（任意） x1</li>\n</ul>\n</li>\n<li>合成方式：<ul>\n<li>[&nbsp;&nbsp;&nbsp;][P][&nbsp;&nbsp;&nbsp;]</li>\n<li>[C][D][C]</li>\n<li>[C][C][C]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>✅ Multiblock Pickaxe - 多方块挖掘镐<ul>\n<li>介绍：现在挖一次方块就等于挖了 9 个方块，挖掘区域为下稿子的方块周围一圈，也就是9个，而区域方向为挖掘方块受击面所在平面，极大提升了下矿体验。</li>\n<li>材料准备：<ul>\n<li>[D]钻石镐 x3</li>\n<li>[S]木棍 x2</li>\n</ul>\n</li>\n<li>合成方式：<ul>\n<li>[D][D][D]</li>\n<li>[&nbsp;&nbsp;&nbsp;][S][&nbsp;&nbsp;&nbsp;]</li>\n<li>[&nbsp;&nbsp;&nbsp;][S][&nbsp;&nbsp;&nbsp;]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>✅ Omni Tool - 多功能工具<ul>\n<li>介绍：使用这个多功能工具优化你的库存空间。这使你能够像使用镐、斧头或铲子一样打破任何方块。出门带着一个就行了，大大提高跑图体验。</li>\n<li>材料准备：<ul>\n<li>[H]蜂蜜块 x6</li>\n<li>[A]钻石斧 x1</li>\n<li>[P]钻石镐 x1</li>\n<li>[S]钻石铲 x1</li>\n</ul>\n</li>\n<li>合成方式：<ul>\n<li>[H][A][H]</li>\n<li>[H][P][H]</li>\n<li>[H][S][H]</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>✅ Harvester Hoe - 收割者锄<ul>\n<li>介绍：收割的作物将自动重新种植，掉落的物品将添加到您的库存中，除了用于重新种植所需的种子！这将适用于小麦、胡萝卜、甜菜根、土豆、瓜类、南瓜、可可豆和下界疣。</li>\n<li>材料准备：<ul>\n<li>[H]钻石锄 x1</li>\n<li>[W]小麦种子 x1</li>\n<li>[M]西瓜种子 x1</li>\n<li>[U]南瓜种子 x1</li>\n<li>[O]可可豆 x1</li>\n<li>[X]小麦种子 x1</li>\n<li>[B]甜菜根种子 x1</li>\n<li>[P]土豆 x1</li>\n<li>[C]胡萝卜 x1</li>\n</ul>\n</li>\n<li>合成方式：<ul>\n<li>[W][M][U]</li>\n<li>[O][H][X]</li>\n<li>[B][P][C]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/23/66.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/",
            "url": "https://nightingalewk.cn/2024/10/23/66.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/",
            "title": "膝盖中箭之地 常见问题",
            "date_published": "2024-10-23T04:00:00.000Z",
            "content_html": "<h2 id=\"一、写在前面\"><a href=\"#一、写在前面\" class=\"headerlink\" title=\"一、写在前面\"></a>一、写在前面</h2><p>本文将集中回答网友们回复的各类问题，毕竟很多问题回答的次数多了我也烦，还不如在这里列一个问答列表，方便大家查阅</p>\n<p>本文最后更新时间：2024年10月23日</p>\n<h2 id=\"二、常见问题\"><a href=\"#二、常见问题\" class=\"headerlink\" title=\"二、常见问题\"></a>二、常见问题</h2><h3 id=\"Q：服务器换图的原则和频率是怎么规定的？\"><a href=\"#Q：服务器换图的原则和频率是怎么规定的？\" class=\"headerlink\" title=\"Q：服务器换图的原则和频率是怎么规定的？\"></a>Q：服务器换图的原则和频率是怎么规定的？</h3><p>除非当前图已经无法满足新版本的需求，否则一直不换，稳定游玩到底。</p>\n<h3 id=\"Q：服务器是不是收费的\"><a href=\"#Q：服务器是不是收费的\" class=\"headerlink\" title=\"Q：服务器是不是收费的\"></a>Q：服务器是不是收费的</h3><p>永久免费，欢迎赞助（要恰饭的嘛）</p>\n<h3 id=\"Q：为啥腐竹老是不理我？为啥我提出的问题回复的很慢？\"><a href=\"#Q：为啥腐竹老是不理我？为啥我提出的问题回复的很慢？\" class=\"headerlink\" title=\"Q：为啥腐竹老是不理我？为啥我提出的问题回复的很慢？\"></a>Q：为啥腐竹老是不理我？为啥我提出的问题回复的很慢？</h3><p>我有事业、爱人、家人、朋友，游戏审核啥的只能放后面，理解万岁！婚后男人你懂的 ~</p>\n<p>你们的问题我都会看，请耐心等待。</p>\n<p>当然对于你的申请来说，要是你的申请流程没按照审核群置顶公告的流程来，我肯定不理你鸭，回去看看流程补齐缺失的就好了</p>\n<h3 id=\"Q：有人说“为啥服务器没有xxx？为哈不能用xxx？一个人管理服务器？独裁？垃圾！艹”，对此腐竹有啥回应吗？\"><a href=\"#Q：有人说“为啥服务器没有xxx？为哈不能用xxx？一个人管理服务器？独裁？垃圾！艹”，对此腐竹有啥回应吗？\" class=\"headerlink\" title=\"Q：有人说“为啥服务器没有xxx？为哈不能用xxx？一个人管理服务器？独裁？垃圾！艹”，对此腐竹有啥回应吗？\"></a>Q：有人说“为啥服务器没有xxx？为哈不能用xxx？一个人管理服务器？独裁？垃圾！艹”，对此腐竹有啥回应吗？</h3><p>对于这样的人，一眼DJ，鉴定为纯纯的铸币。</p>\n<p>回到正题，有问题你可以这样问：</p>\n<ul>\n<li>建议服务器 …</li>\n<li>我觉得加上 … 更好</li>\n<li>不知道加上 … 服务器是不是会更好</li>\n<li>请问 …</li>\n<li>可否 …</li>\n</ul>\n<p>我欢迎大家积极发表理性的意见和建议，“会说话”是一个人的基本素养。</p>\n<h3 id=\"Q：我要是不想玩了，组织会怎么处理？\"><a href=\"#Q：我要是不想玩了，组织会怎么处理？\" class=\"headerlink\" title=\"Q：我要是不想玩了，组织会怎么处理？\"></a>Q：我要是不想玩了，组织会怎么处理？</h3><p>一般玩家都在自行退群或者跟我说声不想玩的，我都是走“三删除”的逻辑：</p>\n<ol>\n<li>删除 xbox 好友</li>\n<li>剥夺服务器玩家用户权限</li>\n<li>踢群</li>\n</ol>\n<p>一旦有人退群，不管是有意无意的，一律走“三删除”的逻辑。</p>\n<h3 id=\"Q：服务器掉线？高延时？\"><a href=\"#Q：服务器掉线？高延时？\" class=\"headerlink\" title=\"Q：服务器掉线？高延时？\"></a>Q：服务器掉线？高延时？</h3><p>在群里反馈一下，只要有一个人能玩，就代表着服务器没问题。那就只有是你的问题了，看看网络是不是不顺畅，看看设备是不是不给力。</p>\n<p>若都反应上不去等问题，那就是领域服务器崩了，等待微软自行修复即可。</p>\n<h3 id=\"Q：主群的管理员身份有啥用？不是群主一人独裁了吗？\"><a href=\"#Q：主群的管理员身份有啥用？不是群主一人独裁了吗？\" class=\"headerlink\" title=\"Q：主群的管理员身份有啥用？不是群主一人独裁了吗？\"></a>Q：主群的管理员身份有啥用？不是群主一人独裁了吗？</h3><p>仅作纪念意义。主群的管理员从建群到现在就一直这几个人，从来没变，其实可以把它当作是一种身份 —— 一个在群里待得比其他绝大部分群员久且很幸运的身份（类似绝版徽章）</p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/23/65.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E5%8A%A0%E5%85%A5%E6%96%B9%E5%BC%8F/",
            "url": "https://nightingalewk.cn/2024/10/23/65.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E5%8A%A0%E5%85%A5%E6%96%B9%E5%BC%8F/",
            "title": "膝盖中箭之地 加入方式",
            "date_published": "2024-10-23T03:00:00.000Z",
            "content_html": "<ol>\n<li>首先加入 QQ 审核群 417396863</li>\n<li>填写 <strong>问卷调查</strong>（<a href=\"https://docs.qq.com/form/page/DQlBhdmFMc1BxQUxU?_w_tencentdocx_form=1\">点我填问卷</a>）</li>\n<li>看 <strong>玩家守则</strong>（<a href=\"https://nightingalewk.cn/2024/10/23/64.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E5%AE%88%E5%88%99/\">点我看守则</a>），找关键字（在文末，一句话）</li>\n<li>找审核群的群主，回复【<strong>关键字</strong>】和【<strong>XboxID</strong>】</li>\n<li>等待审批</li>\n</ol>\n<p>等通过审核进主群后，你就可以正常游玩了。</p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/23/64.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E5%AE%88%E5%88%99/",
            "url": "https://nightingalewk.cn/2024/10/23/64.%20%E8%86%9D%E7%9B%96%E4%B8%AD%E7%AE%AD%E4%B9%8B%E5%9C%B0%20%E7%8E%A9%E5%AE%B6%E5%AE%88%E5%88%99/",
            "title": "膝盖中箭之地 玩家守则",
            "date_published": "2024-10-23T02:00:00.000Z",
            "content_html": "<p>本文将通过 3 小节来为您清晰条例的说明游玩时必须遵守的文件 —— 玩家守则，全篇阅读大约需要 5 分钟</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、自我介绍\"><a href=\"#一、自我介绍\" class=\"headerlink\" title=\"一、自我介绍\"></a>一、自我介绍</h2><p>称呼我 wk 就行，XboxID：LexingtonWK，Java 账户昵称：NightingaleWK，毕业于<a href=\"https://www.sdut.edu.cn/\">山东理工大学</a>，计算机专业，曾任 Laravel 工程师职务与项目经理职务，现任 CEC 的某地数字城市，是一名 TALL STACK developer，本人是 1.7.2 入的坑，喜欢这款游戏的同时，同时不甘于一个人自己玩，于是买了个领域服务器，从 17 年一直开到现在。</p>\n<h2 id=\"二、服务器介绍\"><a href=\"#二、服务器介绍\" class=\"headerlink\" title=\"二、服务器介绍\"></a>二、服务器介绍</h2><h3 id=\"1-配置\"><a href=\"#1-配置\" class=\"headerlink\" title=\"1.配置\"></a>1.配置</h3><p>目前提供 <strong>1 个</strong> 服务器供玩家游玩：</p>\n<ul>\n<li><strong>JAVA 版</strong> 服务器<ul>\n<li>目前版本：1.21.41；</li>\n<li>Addon 列表 ：<ol>\n<li>耐久显示</li>\n<li>Damage Indicator Addon</li>\n<li>Item Info+ </li>\n<li>Hiker’s Friend Addon</li>\n<li>Poisonous Potato Addon</li>\n<li>Spark Pets Lite Addon</li>\n<li>Spark Portals Addon</li>\n<li>Combine Ores Addon</li>\n<li>Gravestone Addon</li>\n<li>World Utilities Addon</li>\n<li>Planes Pro Addon</li>\n<li>Security Addon</li>\n<li>Furniture Addon</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-管理\"><a href=\"#2-管理\" class=\"headerlink\" title=\"2.管理\"></a>2.管理</h3><p>个人独裁。腐竹拥有一切条例解释权和所有行为裁定权；</p>\n<p>没有乱七八糟的组织结构，就我一个人，我会尽最大可能公正客观的对待每一次提意，我所做的目的就是为了我更好的管理服务器、玩家更好的进行游戏；</p>\n<p>回复和审批处理不会很及时，但我看见了的都会去给处理的，大家放心。</p>\n<h2 id=\"三、玩家守则\"><a href=\"#三、玩家守则\" class=\"headerlink\" title=\"三、玩家守则\"></a>三、玩家守则</h2><ol>\n<li>生存不易，让自己坚强起来，不要无脑的等待他人的恩赐。用自己的实际行动在游戏里创造价值，赢得他人尊重；</li>\n<li>不拿取他人物品、不杀害他人拥有的生物、不破坏他人领地方块、不恶意伤人，未经他人允许，请勿对他人及其所有财产进行抢、偷、借、损等行为；</li>\n<li>对于作弊、卡恶性 Bug，造成游戏失衡、影响他人游戏体验的人，第一次警告，第二次飞机；</li>\n<li>禁止高频红石、禁止高空流水（岩浆）；</li>\n<li>游戏内外禁止污蔑诽谤、人身攻击、网络暴力等行为，若发现直接飞机并保留对其发起民事行驶处理的权利；</li>\n<li>出生点周围区域为主城位置，建设请遵循群主安排，符合主城设计思路与风格。群主有权对不符合主城设计的建筑进行拆除，拆除后会给玩家进行一定的补偿；</li>\n<li>生存发展时，建议圈地，若周围已有其他人，请与其协商，做到双方和谐共处；</li>\n<li>请自觉把苦力怕的坑填上；</li>\n<li>请大家通过自己的言行举止在建造领域积极向上的游戏氛围，双标党、优越狗、素质低下党、撕 13 党和小学生无脑言论党均是踢群的对象。有问题多沟通，有分歧互理解，没什么是沟通解决不了的，若有，那我就踢个群试试；</li>\n<li>多利用牌子来表述自己的想法，比如“抱歉，误伤了您的牛，这是赔偿”、“一不小心地给你踩了，给你补种了”、“绝了，这是谁建的这么好看”、“你的红石设备被我一不小心玩坏了，需要怎么配合群里叫我，我帮你修”等；</li>\n<li>谁提出谁实现。服务器推荐大家自己挖坑自己填，对自己的工程负责，当然，完全可以找志同道合的小伙伴一起实现；</li>\n<li>严禁在服务器内的任何地方拉人，禁止宣传其他服务器。若您想自建服务器并找人，请您自己去贴吧知乎上努力，本服务器发现拉人情况直接飞机；</li>\n<li>砍树请砍完。不要留个够不到的数头在那。</li>\n</ol>\n<p>🔑 <strong>关键词：苟利国家生死以</strong> 🔑</p>\n",
            "tags": [
                "我的世界",
                "Minecraft",
                "膝盖中箭之地",
                "领域",
                "realms",
                "公告"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2024/10/10/63.%20%E4%BB%8E%200%20%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2%20LNMP%20%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/",
            "url": "https://nightingalewk.cn/2024/10/10/63.%20%E4%BB%8E%200%20%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2%20LNMP%20%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/",
            "title": "从 0 开始部署 LNMP 生产环境",
            "date_published": "2024-10-10T01:00:00.000Z",
            "content_html": "<h2 id=\"前置准备工作\"><a href=\"#前置准备工作\" class=\"headerlink\" title=\"前置准备工作\"></a>前置准备工作</h2><p>本文章将指导您如何使用一台空白的云服务器（这里演示的是腾讯云的轻量服务器），在仅安装 ubuntu 24.04 操作系统的情况下，一步步完成 LNMP 环境的配置</p>\n<h2 id=\"1-初始化-root-账户密码\"><a href=\"#1-初始化-root-账户密码\" class=\"headerlink\" title=\"1. 初始化 root 账户密码\"></a>1. 初始化 root 账户密码</h2><p>一行指令即可实现，其中需要输入两次密码，自己要记住。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> passwd root</span><br></pre></td></tr></table></figure>\n\n<p>即便如此，这个 root 账户我们基本不用，但是初始化一下又没啥问题。</p>\n<h2 id=\"2-更新系统\"><a href=\"#2-更新系统\" class=\"headerlink\" title=\"2. 更新系统\"></a>2. 更新系统</h2><p>目的是确保系统的所有软件包都是最新的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt update &amp;&amp; <span class=\"built_in\">sudo</span> apt upgrade -y</span><br></pre></td></tr></table></figure>\n\n<p>其中，-y 是 apt upgrade 命令中的一个选项，它的作用是自动回答 “yes”（是） 以确认安装或升级过程中的所有提示。</p>\n<h2 id=\"3-安装-Nginx\"><a href=\"#3-安装-Nginx\" class=\"headerlink\" title=\"3. 安装 Nginx\"></a>3. 安装 Nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install nginx -y</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，可以使用以下命令检查 Nginx 是否已经正确启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl status nginx</span><br></pre></td></tr></table></figure>\n\n<p>访问服务器的 IP 地址（例如：<a href=\"http://your_server_ip),你应该能看到/\">http://your_server_ip），你应该能看到</a> Nginx 的默认页面。</p>\n<h2 id=\"4-安装-MySQL\"><a href=\"#4-安装-MySQL\" class=\"headerlink\" title=\"4. 安装 MySQL\"></a>4. 安装 MySQL</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install mysql-server -y</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，执行以下命令对 MySQL 进行安全性设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> mysql_secure_installation</span><br></pre></td></tr></table></figure>\n\n<p>完成后，登录 MySQL 检查：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> mysql</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-修改-MySQL-的认证机制从-auth-socket-插件认证改为密码验证\"><a href=\"#4-修改-MySQL-的认证机制从-auth-socket-插件认证改为密码验证\" class=\"headerlink\" title=\"4. 修改 MySQL 的认证机制从 auth_socket 插件认证改为密码验证\"></a>4. 修改 MySQL 的认证机制从 auth_socket 插件认证改为密码验证</h2><p>在新的 MySQL 版本中，root 用户默认使用 auth_socket 插件进行身份验证，这意味着只有在系统中以 root 或 sudo 权限运行的用户才可以登录 MySQL，而无需密码。</p>\n<p>但是这个机制不是我们需要的，如果不为 MySQL 的 root 用户设置密码，Laravel 将无法通过默认的 DB_USERNAME&#x3D;root 和 DB_PASSWORD 来连接到数据库。因为 Laravel 的数据库连接需要使用传统的用户名和密码进行身份验证，而不是通过 auth_socket 插件的方式。</p>\n<p>为了确保 Laravel 能够成功连接 MySQL 数据库，需要按照以下步骤操作：</p>\n<ol>\n<li>登录 MySQL：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> mysql</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看 root 用户的身份验证插件：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">user</span>, host, plugin <span class=\"keyword\">FROM</span> mysql.user;</span><br></pre></td></tr></table></figure>\n\n<p>检查 root 用户的 plugin 是否为 auth_socket。</p>\n<ol start=\"3\">\n<li>设置 root 用户的密码，并将身份验证插件更改为 mysql_native_password（或者 caching_sha2_password）：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> mysql_native_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;your_new_password&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>或者使用 caching_sha2_password 插件：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> caching_sha2_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;your_new_password&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>小课堂：MySQL 8.0 及之后的版本中，mysql_native_password 和 caching_sha2_password 是 MySQL 中两种不同的身份验证插件，它们在安全性和性能上有一定的区别。以下是它们的详细对比：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. mysql_native_password 插件</span><br><span class=\"line\">    - 概述：mysql_native_password 是 MySQL 较早版本（5.7 及以前）中的默认身份验证插件，它通过哈希算法（SHA1）加密用户密码，并用于验证用户身份。</span><br><span class=\"line\">    - 优点：</span><br><span class=\"line\">        - 兼容性好：与 MySQL 早期版本、PHP 及其他数据库驱动程序（如 PDO、MySQLi）都有很好的兼容性。</span><br><span class=\"line\">        - 配置简单：不需要额外的密码加密设置，容易理解和使用。</span><br><span class=\"line\">    - 缺点：</span><br><span class=\"line\">        - 安全性较低：使用 SHA1 作为哈希算法，而 SHA1 已被证明存在安全漏洞，因此使用该插件的密码容易受到彩虹表攻击和其他哈希破解技术的攻击。</span><br><span class=\"line\">    - 适用场景：</span><br><span class=\"line\">        - 与旧版本 MySQL 或旧版本客户端程序的兼容性需求。</span><br><span class=\"line\">        - 出于兼容性考虑，推荐在低风险环境或开发环境中使用。</span><br><span class=\"line\">2. caching_sha2_password 插件</span><br><span class=\"line\">    - 概述：caching_sha2_password 是 MySQL 8.0 及之后的默认身份验证插件，使用更安全的 SHA-256 哈希算法来加密密码，并带有密码缓存功能，可以提高身份验证的效率。</span><br><span class=\"line\">    - 优点：</span><br><span class=\"line\">        - 更高的安全性：SHA-256 比 SHA1 更强大，能够更好地抵御暴力破解和其他类型的密码攻击。</span><br><span class=\"line\">        - 提高性能：使用了客户端和服务器的身份验证缓存机制，可以减少重复身份验证时的性能开销，提升性能表现。</span><br><span class=\"line\">        - 加密连接：支持加密连接（TLS/SSL），在不安全的网络中也可以保证传输中的数据安全性。</span><br><span class=\"line\">    缺点：</span><br><span class=\"line\">        - 兼容性问题：由于 caching_sha2_password 是 MySQL 8.0 中引入的新插件，因此可能与旧版本的 MySQL 客户端和驱动程序不兼容。例如：一些旧版本的 PHP 和 MySQLi 扩展可能无法直接连接到使用 caching_sha2_password 插件的 MySQL 数据库。</span><br><span class=\"line\">    - 适用场景：</span><br><span class=\"line\">        - 强安全性需求：在生产环境中，推荐使用 caching_sha2_password 来确保数据安全性。</span><br><span class=\"line\">        - 高性能需求：由于缓存机制的存在，适用于高并发和频繁数据库访问的场景。</span><br><span class=\"line\"></span><br><span class=\"line\">在选择建议方面：</span><br><span class=\"line\"></span><br><span class=\"line\">1. 兼容性优先时使用 mysql_native_password：</span><br><span class=\"line\">    - 如果你的 Laravel 项目、PHP 版本较旧（例如 PHP 7.x），或者使用了旧的 MySQL 客户端库（如 MySQLi），可能会遇到 caching_sha2_password 不兼容的问题。</span><br><span class=\"line\">    - 在这种情况下，可以选择 mysql_native_password 作为过渡解决方案，以保证 Laravel 项目能够正常连接到数据库。</span><br><span class=\"line\">2. 安全性优先时使用 caching_sha2_password：</span><br><span class=\"line\">    - 在生产环境中，如果你的 Laravel 项目、PHP 版本以及 MySQL 客户端均支持 MySQL 8.0 及以上，并且支持 caching_sha2_password 插件，建议使用该插件以提高密码安全性。</span><br><span class=\"line\">    - 另外，如果需要使用 SSL/TLS 加密的连接，也建议使用 caching_sha2_password。</span><br></pre></td></tr></table></figure>\n\n<p>这里我选择的是 <strong>caching_sha2_password</strong></p>\n<ol start=\"4\">\n<li>刷新权限表：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>退出 MySQL：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exit;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>验证 root 密码是否生效</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-安装-PHP\"><a href=\"#5-安装-PHP\" class=\"headerlink\" title=\"5. 安装 PHP\"></a>5. 安装 PHP</h2><p>安装 PHP 及其扩展：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install php-fpm php-mysql php-cli php-xml php-mbstring php-curl php-zip php-gd php-imagick -y</span><br></pre></td></tr></table></figure>\n\n<p>截稿时最新版本为 8.3</p>\n<p>配置 PHP-FPM： 编辑 PHP 配置文件 php.ini：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> vim /etc/php/8.3/fpm/php.ini</span><br></pre></td></tr></table></figure>\n\n<p>确保以下参数值正确（如果没有则手动添加或修改）：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">cgi.fix_pathinfo</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">memory_limit</span> = <span class=\"number\">512</span>M</span><br><span class=\"line\"><span class=\"attr\">upload_max_filesize</span> = <span class=\"number\">50</span>M</span><br><span class=\"line\"><span class=\"attr\">post_max_size</span> = <span class=\"number\">50</span>M</span><br><span class=\"line\"><span class=\"attr\">max_execution_time</span> = <span class=\"number\">300</span></span><br></pre></td></tr></table></figure>\n\n<p>重启 PHP-FPM 服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart php8.3-fpm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-配置-Nginx-以支持-PHP\"><a href=\"#6-配置-Nginx-以支持-PHP\" class=\"headerlink\" title=\"6. 配置 Nginx 以支持 PHP\"></a>6. 配置 Nginx 以支持 PHP</h2><p>创建一个新的 Nginx 配置文件，或者修改默认的配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> vim /etc/nginx/sites-available/laravel</span><br></pre></td></tr></table></figure>\n\n<p>在文件中添加以下内容（确保与 Laravel 项目目录匹配）：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> your_domain_or_ip;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/laravel/public;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.php?<span class=\"variable\">$query_string</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> snippets/fastcgi-php.conf;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> unix:/var/run/php/php8.1-fpm.sock;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> <span class=\"regexp\">~ /\\.ht</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">deny</span> all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>启用此配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /etc/nginx/sites-available/laravel /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure>\n\n<p>检查 Nginx 配置语法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> nginx -t</span><br></pre></td></tr></table></figure>\n\n<p>重启 Nginx：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-Composer\"><a href=\"#安装-Composer\" class=\"headerlink\" title=\"安装 Composer\"></a>安装 Composer</h2><p>全局安装 Composer：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sS https://getcomposer.org/installer | php</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">mv</span> composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure>\n\n<p>验证：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完事儿\"><a href=\"#完事儿\" class=\"headerlink\" title=\"完事儿\"></a>完事儿</h2><p>至此，一个崭新的 LNMP 环境就配置好了，下一篇文章我将继续介绍如何在此基础上部署一个 Laravel 项目。</p>\n",
            "tags": [
                "linux"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/11/21/62.%20laravel%2010%20%E5%9C%A8%20vite%20%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%B8%AD%E5%BC%95%E5%85%A5%E5%B9%B6%E4%BD%BF%E7%94%A8%20Font%20Awesome/",
            "url": "https://nightingalewk.cn/2023/11/21/62.%20laravel%2010%20%E5%9C%A8%20vite%20%E5%B7%A5%E4%BD%9C%E6%B5%81%E4%B8%AD%E5%BC%95%E5%85%A5%E5%B9%B6%E4%BD%BF%E7%94%A8%20Font%20Awesome/",
            "title": "laravel 10 在 vite 工作流中引入并使用 Font Awesome 6",
            "date_published": "2023-11-21T10:00:00.000Z",
            "content_html": "<p>引入 Font Awesome 组件到 Laravel 项目的 Vite 构建中涉及一些步骤。以下是一般的指南：</p>\n<h2 id=\"1-安装-Font-Awesome：\"><a href=\"#1-安装-Font-Awesome：\" class=\"headerlink\" title=\"1. 安装 Font Awesome：\"></a>1. 安装 Font Awesome：</h2><p>通过 npm 或 yarn 安装 Font Awesome。在项目根目录下运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @fortawesome/fontawesome-free</span><br></pre></td></tr></table></figure>\n<p>或者使用 yarn：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @fortawesome/fontawesome-free</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-引入-Font-Awesome-样式：\"><a href=\"#2-引入-Font-Awesome-样式：\" class=\"headerlink\" title=\"2. 引入 Font Awesome 样式：\"></a>2. 引入 Font Awesome 样式：</h2><p>在 Vite 项目中，你可以在入口文件（通常是 main.js 或 main.ts,laravel 默认是 app.js ）中引入 Font Awesome 样式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/main.js or src/main.ts or resources/js/app.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;@fortawesome/fontawesome-free/css/all.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 其他的入口文件内容...</span></span><br></pre></td></tr></table></figure>\n<p>这将引入 Font Awesome 的所有样式。如果你只需要使用特定图标的样式，你可以根据需要引入 solid、regular 或 brands 中的子集。</p>\n<h2 id=\"4-npm-构建\"><a href=\"#4-npm-构建\" class=\"headerlink\" title=\"4. npm 构建\"></a>4. npm 构建</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## laravel sail 环境需要添加 sail 前缀</span></span><br><span class=\"line\">sail npm run dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-开始使用\"><a href=\"#3-开始使用\" class=\"headerlink\" title=\"3. 开始使用\"></a>3. 开始使用</h2><p>然后你就可以使用 Font Awesome 图标了。</p>\n",
            "tags": [
                "Font Awesome",
                "vite"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/11/16/61.%20laravel%20%E9%A1%B9%E7%9B%AE%E6%89%A7%E8%A1%8C%20sail%20up%20%E6%8A%A5%2080%20%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/",
            "url": "https://nightingalewk.cn/2023/11/16/61.%20laravel%20%E9%A1%B9%E7%9B%AE%E6%89%A7%E8%A1%8C%20sail%20up%20%E6%8A%A5%2080%20%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/",
            "title": "laravel 项目执行 sail up 报 80 端口占用问题",
            "date_published": "2023-11-16T09:00:00.000Z",
            "content_html": "<p>今天给一台新机器装好 laravel sail 环境后，在最后一步启动项目时，报错如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wangkai@Precision-<span class=\"number\">7920</span>:~/code/daochenglin$ sail up -d</span><br><span class=\"line\">[+] Building <span class=\"number\">0.0</span>s (<span class=\"number\">0</span>/<span class=\"number\">0</span>)                                                                          docker:<span class=\"keyword\">default</span></span><br><span class=\"line\">[+] Running <span class=\"number\">8</span>/<span class=\"number\">8</span></span><br><span class=\"line\"> ✔ Network daochenglin_sail              Created                                                           <span class=\"number\">0.0</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-meilisearch-<span class=\"number\">1</span>   Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-selenium-<span class=\"number\">1</span>      Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-redis-<span class=\"number\">1</span>         Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-memcached-<span class=\"number\">1</span>     Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-mysql-<span class=\"number\">1</span>         Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-mailpit-<span class=\"number\">1</span>       Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-laravel.test-<span class=\"number\">1</span>  Created                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"><span class=\"built_in\">Error</span> response <span class=\"keyword\">from</span> daemon: Ports are not available: exposing port TCP <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span> -&gt; <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">0</span>: listen tcp <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span>: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</span><br></pre></td></tr></table></figure>\n\n<p>这个问题就是我们本机的 80 端口被占用了，我个人的电脑是 windows 11，系统服务默认开启一个叫 <code>World Wide Web 发布服务</code> 的服务，他是自动启动的，该服务通过 Internet Information Services 管理器提供 Web 连接和管理，默认占用 80 端口，这个服务我们很明显用不到，给他禁用掉，然后再 sail up 就 ok 了。</p>\n<p>一点小小的经验分享 😁</p>\n",
            "tags": [
                "laravel sail",
                "故障排除"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/11/15/60.%20laravel%20artisan%20route%20%E7%94%A8%E6%B3%95/",
            "url": "https://nightingalewk.cn/2023/11/15/60.%20laravel%20artisan%20route%20%E7%94%A8%E6%B3%95/",
            "title": "laravel artisan route 用法",
            "date_published": "2023-11-15T09:00:00.000Z",
            "content_html": "<p>基本用法是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">laravel artisan route 用法</span><br></pre></td></tr></table></figure>\n\n<p>可添加的后缀有：</p>\n<table>\n<thead>\n<tr>\n<th>后缀参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–method&#x3D;<TERM></td>\n<td>Filters the routes by method.</td>\n<td>无</td>\n</tr>\n<tr>\n<td>–name&#x3D;<TERM></td>\n<td>Filters the routes by name.</td>\n<td>无</td>\n</tr>\n<tr>\n<td>–path&#x3D;<TERM></td>\n<td>Filters the routes by path (URI).</td>\n<td>无</td>\n</tr>\n<tr>\n<td>–reverse</td>\n<td>Reverses the order the routes are displayed in the table.</td>\n<td>无</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>Reverses the order the routes are displayed in the table (shortcut to –reverse).</td>\n<td>无</td>\n</tr>\n<tr>\n<td>–sort</td>\n<td>The column to sort by. Accepted values are host, method, uri, name, action or middleware.</td>\n<td>uri</td>\n</tr>\n</tbody></table>\n<p>举例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Filter the route list by name.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --name=account</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Filter the route list by URI.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --path=<span class=\"string\">&#x27;api/v1/&#x27;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># Filter the route list by method.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --method=GET</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The filters can be combined; results will be aggregated using &quot;and&quot; logic. The following command:</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --path=account --method=GET</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Filter the routes and display them in reverse order.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --method=GET --reverse</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># The following is equivalent to the previous example.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --method=GET -r</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># Filter the routes and sort `name` column.</span></span><br><span class=\"line\">php artisan route:<span class=\"keyword\">list</span> --method=GET --sort=name</span><br></pre></td></tr></table></figure>",
            "tags": [
                "artisan 指令"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/11/07/59.%20%E5%93%8E%EF%BC%8C%E5%8F%88%E6%8A%8A%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E4%BA%86/",
            "url": "https://nightingalewk.cn/2023/11/07/59.%20%E5%93%8E%EF%BC%8C%E5%8F%88%E6%8A%8A%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E4%BA%86/",
            "title": "哎，又把博客迁移了",
            "date_published": "2023-11-07T02:57:43.000Z",
            "content_html": "<blockquote>\n<p>就结果来说，我还是回归 hexo 的怀抱了。</p>\n</blockquote>\n<p>本来我的博客部署在自己的腾讯云轻量服务器，但是最近手头的项目需要部署测试，就可能对服务器进行一些变动和修改，甚至重装，这就对博客的稳定造成了影响。为了追求稳定，我决定还是把网站部署到 github pages 上，虽然可能存在部分打不开的情况，但至少是免费的，我再把我的域名指向默认地址上，就没问题了。</p>\n<p>其实 typecho 用得好好的，非常顺手，要不是服务器有其他用处，我才不换呢。</p>\n<p>啥也没丢，啥都可以正常运行，而且 github 为我们提供稳定可靠谱的服务，我觉得就足够了</p>\n<p>回顾一路走来的博客路线，从 wordpress，再到 hexo，再到 typecho，再回到 hexo，个人的偏好从一开始追寻花里胡哨，大而全，慢慢的转为简单简约，稳定可靠。慢慢回归博客的记录本质。</p>\n<p>在发文的时候，我把该转移的资源都完成了转移，那就让我们继续在 github pages 强力驱动下的 hexo 里继续记录我的成长历程吧</p>\n<blockquote>\n<p>生命不息，折腾不止</p>\n</blockquote>\n",
            "tags": [
                "迁移"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/07/10/57.%20%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%20laravel%2010%20%E9%A1%B9%E7%9B%AE%E5%88%B0%20ubuntu%2022.04.2%20%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "url": "https://nightingalewk.cn/2023/07/10/57.%20%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%20laravel%2010%20%E9%A1%B9%E7%9B%AE%E5%88%B0%20ubuntu%2022.04.2%20%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "title": "配置并部署 laravel 10 项目到 ubuntu 22.04.2 服务器",
            "date_published": "2023-07-10T06:21:00.000Z",
            "content_html": "<h2 id=\"ubuntu-镜像下载与安装\"><a href=\"#ubuntu-镜像下载与安装\" class=\"headerlink\" title=\"ubuntu 镜像下载与安装\"></a>ubuntu 镜像下载与安装</h2><p>ubuntu 官方可免费下载服务器版本的 iso 镜像文件，我们使用本镜像进行最小化安装即可。我自己的操作是把镜像交给我们公司的网络运维工程师，让他给我那这个镜像开了个虚机，分配了一个内网 IP 用来测试。</p>\n<p>记得跟网络运维工程师说一下让服务器通互联网，再配置一下阿里云的源</p>\n<h2 id=\"系统必要的配置\"><a href=\"#系统必要的配置\" class=\"headerlink\" title=\"系统必要的配置\"></a>系统必要的配置</h2><p>系统默认没初始化 root 账号，使用下方指令初始化：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<p>然后定一个安全好记的密码就行，我们之后的操作都在 root 账号下执行。</p>\n<p>接下来就是升级 ubuntu 系统</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt upgrade</span><br></pre></td></tr></table></figure>\n\n<p>然后我们安装 vim 编辑器，方便编辑文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install vim</span><br></pre></td></tr></table></figure>\n\n<p>然后我们安装 screen 工具，保证我们的操作不因关闭终端而终止</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install screen</span><br></pre></td></tr></table></figure>\n\n<p>至此该配置的都配置好了</p>\n<h2 id=\"安装并配置-oneinstack\"><a href=\"#安装并配置-oneinstack\" class=\"headerlink\" title=\"安装并配置 oneinstack\"></a>安装并配置 oneinstack</h2><p>oneinstack 是一款自动化部署 lnmp 环境的组件工具，百度并访问官网，选择自动安装，选好你需要的配置后，复制好安装的命令，后面用</p>\n<p>安装 lnmp 环境之前，我们新建一个 screen 窗口，保证我们的安装不因窗口关闭而终止：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screen -S lnmp</span><br></pre></td></tr></table></figure>\n\n<p>下面是一些常用操作，可以参考：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl a + d    // 暂退当前的 screen 窗口</span><br><span class=\"line\">screen -r lnmp    // 恢复名为 lnmp 的 screen 窗口</span><br><span class=\"line\">screen -ls    // 查看当前的所有 screen 窗口信息</span><br></pre></td></tr></table></figure>\n\n<p>回到话题，配置好 screen 就可以开始安装 lnmp 环境啦，用上面的你复制的 oneinstack 生成的指令到你的终端，回车，然后等待安装完毕并重启服务器即可。</p>\n<p>此过程一般没问题，若出现报错，安装会终止并提示错误信息，建议重新执行一遍。再有故障那就要自行解决了。</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><p>根据 oneinstack 安装时配置的数据库密码，我们通过访问咱们主机的 ip 进入 oneinstack 默认页面，然后找到 phpmyadmin ，使用 root 和刚才说的密码进入数据库中，新建一个所需的空白数据库。</p>\n<h2 id=\"部署项目\"><a href=\"#部署项目\" class=\"headerlink\" title=\"部署项目\"></a>部署项目</h2><p>假设你的 laravel 10 项目在 github 中，代码通过 git 进行版本控制。</p>\n<p>接下来我们前往网站目录，并将代码 clone 到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /date/wwwroot</span><br><span class=\"line\">mv default default_back</span><br><span class=\"line\">git clone [ 你的远端 git 地址 ] jiepade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"php-配置\"><a href=\"#php-配置\" class=\"headerlink\" title=\"php 配置\"></a>php 配置</h2><p>我们需要将部分的 php 默认禁用的函数方法打开，方便使用诸如 composer 之类的命令，具体操作为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/php/etc/</span><br><span class=\"line\">vim php.ini</span><br></pre></td></tr></table></figure>\n\n<p>然后找到如下这行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; This directive allows you to disable certain functions.</span><br><span class=\"line\">; It receives a comma-delimited list of function names.</span><br><span class=\"line\">; https://php.net/disable-functions</span><br><span class=\"line\">disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen</span><br></pre></td></tr></table></figure>\n\n<p>修改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,ini_alter,ini_restore,dl,readlink,popepassthru,stream_socket_server,fsocket,popen</span><br></pre></td></tr></table></figure>\n\n<p>保存退出后，重启 php—fpm 服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php-fpm restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"composer-安装与执行\"><a href=\"#composer-安装与执行\" class=\"headerlink\" title=\"composer 安装与执行\"></a>composer 安装与执行</h2><p>回到项目根目录，安装 composer，若已安装，直接配置下一步</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r &quot;copy(&#x27;https://install.phpcomposer.com/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span><br><span class=\"line\">php composer-setup.php</span><br><span class=\"line\">mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure>\n\n<p>若以上指令报错 php 无法找到，请检查path路径是否添加了php的bin目录，具体百度即可。不可能是没装 php，oneinstack 已经给你装好了，这个问题基本上是ubuntu下一般账号能跑 php，但 root 不行。小问题的。</p>\n<p>我们不使用阿里云的 composer 镜像，因为国内镜像的composer各依赖版本不够新，影响使用，用国外原版镜像慢点，但是稳定且最新。</p>\n<p>安装好后，在项目根目录执行 composer i 指令，安装项目所需的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer i</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"laravel-初始化配置\"><a href=\"#laravel-初始化配置\" class=\"headerlink\" title=\"laravel 初始化配置\"></a>laravel 初始化配置</h2><p>接下来就可以进行基础的 laravel 配置了，首先我们复制根目录下的 .env 一份出来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp .env.example .env</span><br></pre></td></tr></table></figure>\n\n<p>然后生成密钥</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan key:generate</span><br></pre></td></tr></table></figure>\n\n<p>然后修改 .env 为项目实际需要调整的内容，具体需要咨询开发人员要改哪些。</p>\n<p>完成上述环节后，就可以进行数据库填充工作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate:refresh --seed &amp;&amp; php artisan admin:install </span><br></pre></td></tr></table></figure>\n\n<p>之后你可能需要借助数据库程序，连接到服务器，把一些你备份的项目初始化数据库填充到项目中，具体自行操作即可，推荐使用 Dbeaver，开源且免费，官方也在更新，别用盗版的 navicat 辣</p>\n<h2 id=\"配置-nginx\"><a href=\"#配置-nginx\" class=\"headerlink\" title=\"配置 nginx\"></a>配置 nginx</h2><p>这时候你访问网址是无法看到你的项目的，需要对 nginx 配置，首先找到配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/conf/</span><br><span class=\"line\">vim nginx.conf</span><br></pre></td></tr></table></figure>\n<p>修改如下的几个值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">######################## default ############################</span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    listen 2333;             &lt;------------------here,change it</span><br><span class=\"line\">    server_name _;</span><br><span class=\"line\">    access_log /data/wwwlogs/access_nginx.log combined;</span><br><span class=\"line\">    root /data/wwwroot/default/public;             &lt;------------------here,change it</span><br><span class=\"line\">    index index.html index.htm index.php;</span><br><span class=\"line\">    #error_page 404 /404.html;</span><br><span class=\"line\">    #error_page 502 /502.html;</span><br><span class=\"line\">    location /nginx_status &#123;</span><br><span class=\"line\">      stub_status on;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">      allow 127.0.0.1;</span><br><span class=\"line\">      deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ [^/]\\.php(/|$) &#123;</span><br><span class=\"line\">      #fastcgi_pass remote_php_ip:9000;</span><br><span class=\"line\">      fastcgi_pass unix:/dev/shm/php-cgi.sock;</span><br><span class=\"line\">      fastcgi_index index.php;</span><br><span class=\"line\">      include fastcgi.conf;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;</span><br><span class=\"line\">      expires 30d;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ .*\\.(js|css)?$ &#123;</span><br><span class=\"line\">      expires 7d;</span><br><span class=\"line\">      access_log off;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location ~ ^/(\\.user.ini|\\.ht|\\.git|\\.svn|\\.project|LICENSE|README.md) &#123;</span><br><span class=\"line\">      deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /.well-known &#123;</span><br><span class=\"line\">      allow all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location / &#123;             &lt;------------------here,add it</span><br><span class=\"line\">      try_files $uri $uri/ /index.php?$query_string;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>保存退出后，重启 nginx 使之生效</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件权限调整\"><a href=\"#文件权限调整\" class=\"headerlink\" title=\"文件权限调整\"></a>文件权限调整</h2><p>我们需要对项目的文件提权，允许项目进行诸如存储文件等操作。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 default</span><br><span class=\"line\">chown -R www-data:www-data default</span><br><span class=\"line\"></span><br><span class=\"line\">cd default</span><br><span class=\"line\">chgrp -R www storage bootstrap/cache</span><br><span class=\"line\">chmod -R ug+rwx storage bootstrap/cache</span><br></pre></td></tr></table></figure>\n\n<p>之后访问 http:&#x2F;&#x2F;[你的 IP 地址]:2333&#x2F; 就可以看到你的项目辣，项目部署到此结束</p>\n",
            "tags": [
                "代码部署"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/07/06/58.%20git%20%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%AB%AF%202%20%E4%B8%AA%E4%BB%93%E5%BA%93/",
            "url": "https://nightingalewk.cn/2023/07/06/58.%20git%20%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%AB%AF%202%20%E4%B8%AA%E4%BB%93%E5%BA%93/",
            "title": "git 同时推送本地代码到远端 2 个仓库",
            "date_published": "2023-07-06T00:36:00.000Z",
            "content_html": "<p>本地代码执行如下命令，可将代码同时提交到 github 和 coding 两个平台：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;初始化项目&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin git@github.com:NightingaleWK/jiepade.git</span><br><span class=\"line\">git remote set-url --add origin git@e.coding.net:nightingalewk/jiepade/v1.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://nightingalewk.cn/2023/05/09/56.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E5%B0%86%20homestead%20%E4%B8%AD%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E5%88%B0%20laravel%20sail%20%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/",
            "url": "https://nightingalewk.cn/2023/05/09/56.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E5%B0%86%20homestead%20%E4%B8%AD%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E5%88%B0%20laravel%20sail%20%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/",
            "title": "（更新中）将 homestead 中的项目迁移到 laravel sail 中进行开发",
            "date_published": "2023-05-09T01:43:00.000Z",
            "content_html": "<p>本文的目的是：将原本跑 homestead 环境下的 laravel 项目，迁移到官方最新推荐的 laravel sail 开发环境中。下面我分享一下我的操作方法。</p>\n<p>在文章开始之前，我们默认大家均已拥有一个 homestead 开发环境，且你也是在其之上本地开发多次的开发者，而且你的需求是将你的 homestead 开发环境转换成 laravel sail，希望借助 docker 技术来提升系统的</p>\n<h2 id=\"1-项目克隆\"><a href=\"#1-项目克隆\" class=\"headerlink\" title=\"1. 项目克隆\"></a>1. 项目克隆</h2><p>首先我们你将线上仓库的代码clone到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:NightingaleWK/larabbs.git larabbs</span><br></pre></td></tr></table></figure>\n\n<p>然后我们启动 homestead ，并在 homestead 的 linux 环境中执行接下来的工作。</p>\n<p>我们先来到项目根目录复制一份 .env 文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp .env.example .env</span><br><span class=\"line\"></span><br><span class=\"line\">vim .env</span><br><span class=\"line\"></span><br><span class=\"line\">// 编辑一下 .env 文件并保存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-项目改造\"><a href=\"#2-项目改造\" class=\"headerlink\" title=\"2. 项目改造\"></a>2. 项目改造</h2><p>然后在已运行的应用中安装 Composer 依赖，以下指令执行后，其余未安装的以来也将一并安装，毕竟我们没有执行过 composer i 嘛</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require laravel/sail --dev</span><br></pre></td></tr></table></figure>\n\n<p>在 Sail 完成安装后，你可以运行 Artisan 命令 sail:install。这个命令将会发布 Sail 的 docker-compose.yml 文件到你应用程序的根目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan sail:install --with=mysql,redis</span><br></pre></td></tr></table></figure>\n\n<p>以上这一步的执行可能会花费很长时间，网上有很多修改相关配置的来提高速度，大家可以自己搜索，至于为什么我不用，那就是希望追求纯粹正统，composer 阿里云的源与官方源完全跟不上，composer u 执行完简直是反向升级，以后再也不相信国内的源了。</p>\n<p>然后我再说一下 with 后面的该怎么填写，你可以尝试执行不带 with 的命令，可以看到几个可选的选项，这些就是填写在 with 后面的内容，按需选择安装即可。</p>\n<p>上述步骤安装完毕会系统会提示 Sail build successful. 这就代表着这一阶段任务完成</p>\n<p>然后我们把项目推送到线上仓库</p>\n<h2 id=\"3-代码上传\"><a href=\"#3-代码上传\" class=\"headerlink\" title=\"3. 代码上传\"></a>3. 代码上传</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;ready for docker&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-代码部署\"><a href=\"#4-代码部署\" class=\"headerlink\" title=\"4. 代码部署\"></a>4. 代码部署</h2><p>然后我们回到我们的sail环境中，把最新的项目代码从仓库拉下来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:NightingaleWK/larabbs.git larabbs</span><br></pre></td></tr></table></figure>\n\n<p>之后我们也是重新配置 .env 文件</p>\n<p>然后我们执行 composer 命令，安装在 sail 环境下的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">    -u &quot;$(id -u):$(id -g)&quot; \\</span><br><span class=\"line\">    -v &quot;$(pwd):/var/www/html&quot; \\</span><br><span class=\"line\">    -w /var/www/html \\</span><br><span class=\"line\">    laravelsail/php82-composer:latest \\</span><br><span class=\"line\">    composer install --ignore-platform-reqs</span><br></pre></td></tr></table></figure>\n<p>这里与在 homestead 中不同的是，我们 sail 环境不包括 composer 命令，这个命令使用一个包含 PHP 与 Composer 的小型 Docker 容器进行应用程序依赖的安装。</p>\n<p>当你使用 laravelsail&#x2F;phpXX-composer 镜像时，你应该选择和你的应用程序所用环境相同的 PHP 版本（74、80、81 或 82）。</p>\n<h2 id=\"5-环境运行\"><a href=\"#5-环境运行\" class=\"headerlink\" title=\"5. 环境运行\"></a>5. 环境运行</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sail up -d</span><br><span class=\"line\"></span><br><span class=\"line\">// -d 表示后台运行，去掉那就是前台运行，需要 ctrl + c 来结束。加入带着 -d，那么我们退出的话则需要输入 sail down 来结束</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "homestead",
                "laravel sail"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/03/28/55.%20%E8%A7%A3%E5%86%B3%20.gitignore%20%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/",
            "url": "https://nightingalewk.cn/2023/03/28/55.%20%E8%A7%A3%E5%86%B3%20.gitignore%20%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/",
            "title": "解决 .gitignore 无效的问题",
            "date_published": "2023-03-28T00:38:00.000Z",
            "content_html": "<p>首先确定好需要忽略的文件或文件夹，并加入到 .gitignore 中，然后执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached .</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;update .gitignore&quot;</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>若你的另一台机子也需要更新代码，那么他在 git pull 的时候，.gitignore 中你刚才添加的文件和文件夹都会删除，记得重新生成或新建上。</p>\n",
            "tags": [
                "debug"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/01/04/54.%20%E7%9A%AE%E8%9B%8B%E7%98%A6%E8%82%89%E7%B2%A5/",
            "url": "https://nightingalewk.cn/2023/01/04/54.%20%E7%9A%AE%E8%9B%8B%E7%98%A6%E8%82%89%E7%B2%A5/",
            "title": "皮蛋瘦肉粥",
            "date_published": "2023-01-04T09:31:00.000Z",
            "content_html": "<ol>\n<li>200克大米（也可糯米大米各100克），淘米洗净，然后重新加入清水500克，浸泡5小时，浸泡完毕后倒掉水</li>\n<li>里脊肉50g切丝、皮蛋一个捏碎或切丁、料酒2g、盐6g、鸡精3g、味精3g、食用碱0.5g</li>\n<li>用上方的盐、料酒腌制一下肉丝。</li>\n<li>砂锅倒入食用碱、盐、2000g热水（米，热水 &#x3D; 1：10），开大火烧开，转小火熬25分钟。期间不停搅动，以防止糊锅</li>\n<li>快开锅的时候加入肉丝、皮蛋丁、味精、鸡精。然后可自行加点别的，比如姜丝、葱末</li>\n<li>出锅</li>\n</ol>\n",
            "tags": [
                "粥"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2022/12/20/53.%20%E5%9C%B0%E9%81%93%E9%BB%84%E7%84%96%E9%B8%A1/",
            "url": "https://nightingalewk.cn/2022/12/20/53.%20%E5%9C%B0%E9%81%93%E9%BB%84%E7%84%96%E9%B8%A1/",
            "title": "地道黄焖鸡",
            "date_published": "2022-12-20T09:25:00.000Z",
            "content_html": "<h2 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h2><p>1.5 斤鸡腿<br>土豆切块<br>杭椒辣椒等切块</p>\n<h2 id=\"调味\"><a href=\"#调味\" class=\"headerlink\" title=\"调味\"></a>调味</h2><p>耗油15克<br>海鲜酱20克<br>黄豆酱15克<br>葱伴侣大酱15克<br>东古一品鲜酱油25克<br>红烧酱油5克</p>\n<h2 id=\"腌制\"><a href=\"#腌制\" class=\"headerlink\" title=\"腌制\"></a>腌制</h2><p>葱姜料酒去腥，加酱料，搅匀，腌制半小时</p>\n<h2 id=\"中药\"><a href=\"#中药\" class=\"headerlink\" title=\"中药\"></a>中药</h2><p>八角三克，桂皮五克，香叶一克，小茴香两克，白芷三克，花椒三克，草果皮一个去籽，装包里，冲洗3次</p>\n<h2 id=\"灵魂\"><a href=\"#灵魂\" class=\"headerlink\" title=\"灵魂\"></a>灵魂</h2><p>干香菇六颗洗净，加开水300g，制香菇水，这是黄焖鸡的灵魂</p>\n<h2 id=\"烹饪\"><a href=\"#烹饪\" class=\"headerlink\" title=\"烹饪\"></a>烹饪</h2><p>锅中加黄焖鸡，香菇水，五克鸡精，三克味精，五克白糖，下料包，高压锅封盖，上汽后计时5分钟，之后再焖 20 分钟。砂锅放香菇，土豆块，烧开，放青红椒，收汁，撒香葱和香菜</p>\n",
            "tags": [
                "特色小吃"
            ]
        }
    ]
}