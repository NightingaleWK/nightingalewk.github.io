<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nightingalewk.cn</id>
    <title>雪漫城的风宅 • Posts by &#34;git&#34; category</title>
    <link href="https://nightingalewk.cn" />
    <updated>2025-06-26T02:00:00.000Z</updated>
    <category term="迁移" />
    <category term="hexo" />
    <category term="电脑维修" />
    <category term="主食" />
    <category term="pr" />
    <category term="bilibili" />
    <category term="学习笔记" />
    <category term="热菜" />
    <category term="汤" />
    <category term="甜品" />
    <category term="梦境" />
    <category term="海鲜" />
    <category term="homestead" />
    <category term="代码部署" />
    <category term="oneinstack" />
    <category term="lnmp" />
    <category term="代码更新" />
    <category term="dcat admin" />
    <category term="oh-my-zsh" />
    <category term="debug" />
    <category term="指令" />
    <category term="道歉信" />
    <category term="免密" />
    <category term="laravel sail" />
    <category term="vs code" />
    <category term="fileinfo" />
    <category term="PAC 清单" />
    <category term="定时任务" />
    <category term="gpg" />
    <category term="sshppass" />
    <category term="awk" />
    <category term="net time" />
    <category term="swap" />
    <category term="端口查询" />
    <category term="表单验证" />
    <category term="事件" />
    <category term="blade" />
    <category term="wordpress" />
    <category term="队列" />
    <category term="redis" />
    <category term="特色小吃" />
    <category term="粥" />
    <category term="Cloudreve" />
    <category term="artisan 指令" />
    <category term="故障排除" />
    <category term="Font Awesome" />
    <category term="vite" />
    <category term="linux" />
    <category term="我的世界" />
    <category term="Minecraft" />
    <category term="膝盖中箭之地" />
    <category term="领域" />
    <category term="realms" />
    <category term="公告" />
    <category term="screen" />
    <category term="cursor" />
    <category term="人工智能" />
    <category term="prompt" />
    <category term="打印机" />
    <category term="京瓷" />
    <category term="教程" />
    <category term="Git" />
    <category term="GitHub" />
    <category term="版本控制" />
    <category term="Monorepo" />
    <category term="DevOps" />
    <entry>
        <id>https://nightingalewk.cn/2025/06/26/75.%20%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%20Git%20%E4%BB%93%E5%BA%93%EF%BC%88Monorepo%20%E5%AE%9E%E8%B7%B5%EF%BC%89/</id>
        <title>如何合并两个独立的 Git 仓库（Monorepo 实践）</title>
        <link rel="alternate" href="https://nightingalewk.cn/2025/06/26/75.%20%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%20Git%20%E4%BB%93%E5%BA%93%EF%BC%88Monorepo%20%E5%AE%9E%E8%B7%B5%EF%BC%89/"/>
        <content type="html">&lt;p&gt;本文是一份将两个完全独立、无关联历史的 Git 仓库合并到一个新仓库（Monorepo）的完整操作指南。我们将把每个旧仓库的内容及其完整提交历史，迁移到新仓库的不同子目录中。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;核心思路&#34;&gt;&lt;a href=&#34;#核心思路&#34; class=&#34;headerlink&#34; title=&#34;核心思路&#34;&gt;&lt;/a&gt;核心思路&lt;/h2&gt;&lt;p&gt;我们的目标是创建一个全新的仓库 &lt;code&gt;sushang-combined&lt;/code&gt;，并将 &lt;code&gt;sushang-v1&lt;/code&gt; 和 &lt;code&gt;sushang-v2&lt;/code&gt; 两个仓库的所有内容和历史记录，分别完整地移入 &lt;code&gt;sushang-combined&lt;/code&gt; 下的 &lt;code&gt;sushang-v1/&lt;/code&gt; 和 &lt;code&gt;sushang-v2/&lt;/code&gt; 子目录中。&lt;/p&gt;
&lt;h2 id=&#34;第一阶段：环境准备&#34;&gt;&lt;a href=&#34;#第一阶段：环境准备&#34; class=&#34;headerlink&#34; title=&#34;第一阶段：环境准备&#34;&gt;&lt;/a&gt;第一阶段：环境准备&lt;/h2&gt;&lt;p&gt;首先，创建工作区，并克隆所有需要的仓库。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1. 创建一个专门的工作目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; git-merge-project &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; git-merge-project&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2. 克隆你的两个源仓库 (请替换为你的实际URL)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; &amp;lt;URL_for_sushang-v1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; &amp;lt;URL_for_sushang-v2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 创建并初始化最终要合并到的目标仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; sushang-combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; sushang-combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;第二阶段：重构源仓库&#34;&gt;&lt;a href=&#34;#第二阶段：重构源仓库&#34; class=&#34;headerlink&#34; title=&#34;第二阶段：重构源仓库&#34;&gt;&lt;/a&gt;第二阶段：重构源仓库&lt;/h2&gt;&lt;p&gt;此阶段是关键。我们需要在每个源仓库中，将所有文件移入一个与仓库同名的子目录。&lt;strong&gt;这个过程需要对 &lt;code&gt;sushang-v1&lt;/code&gt; 和 &lt;code&gt;sushang-v2&lt;/code&gt; 分别执行一次。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面以 &lt;code&gt;sushang-v1&lt;/code&gt; 为例：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1. 进入 sushang-v1 的本地克隆目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ../sushang-v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2. 创建子目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; sushang-v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 将所有文件和目录移动到新子目录中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 git mv 至关重要，它能让 Git 追踪文件移动，保留历史记录！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -k 标志会忽略移动过程中可能出现的无关紧要的错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; -k * sushang-v1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4. 单独处理以点开头的隐藏文件（如 .gitignore, .github 等）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; .gitignore sushang-v1/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 5. 提交这次结构调整&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;chore: Restructure repository for monorepo merge&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;请返回上一级目录，对 &lt;code&gt;sushang-v2&lt;/code&gt; 仓库重复上述 1-5 步。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;第三阶段：执行合并&#34;&gt;&lt;a href=&#34;#第三阶段：执行合并&#34; class=&#34;headerlink&#34; title=&#34;第三阶段：执行合并&#34;&gt;&lt;/a&gt;第三阶段：执行合并&lt;/h2&gt;&lt;p&gt;现在，所有准备工作就绪，可以开始真正的合并操作。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1. 返回合并目标仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ../sushang-combined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2. 合并 sushang-v1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    将本地重构后的 sushang-v1 仓库添加为名为 v1 的远程源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add v1 ../sushang-v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    从 v1 拉取所有历史数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git fetch v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    合并 v1 的主分支，--allow-unrelated-histories 是关键！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git merge v1/main --allow-unrelated-histories -m &lt;span class=&#34;string&#34;&gt;&amp;quot;feat: Merge sushang-v1 history&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 合并 sushang-v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    以同样的方式添加并合并 v2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add v2 ../sushang-v2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git fetch v2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git merge v2/main --allow-unrelated-histories -m &lt;span class=&#34;string&#34;&gt;&amp;quot;feat: Merge sushang-v2 history&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4. 验证结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    执行 ls，应能看到 sushang-v1 和 sushang-v2 两个目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    执行 git log --graph --oneline --all 查看合并后的历史图谱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt; -la&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;第四阶段：发布到-GitHub&#34;&gt;&lt;a href=&#34;#第四阶段：发布到-GitHub&#34; class=&#34;headerlink&#34; title=&#34;第四阶段：发布到 GitHub&#34;&gt;&lt;/a&gt;第四阶段：发布到 GitHub&lt;/h2&gt;&lt;p&gt;将本地合并好的新仓库推送到远程。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1. 在 GitHub 上创建一个新的、空的仓库，例如 sushang-combined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2. 在本地 sushang-combined 目录中，关联到你刚创建的远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin &amp;lt;URL_for_new_github_repo&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 将本地的完整历史推送到 GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    -u 选项会建立本地 main 分支与远程 origin/main 分支的追踪关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4. (可选) 清理本地的临时远程源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote &lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote &lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; v2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;第五阶段：归档旧仓库&#34;&gt;&lt;a href=&#34;#第五阶段：归档旧仓库&#34; class=&#34;headerlink&#34; title=&#34;第五阶段：归档旧仓库&#34;&gt;&lt;/a&gt;第五阶段：归档旧仓库&lt;/h2&gt;&lt;p&gt;为了避免混淆，并完整保留 Issues、Pull Requests 等宝贵信息，最佳实践是&lt;strong&gt;归档&lt;/strong&gt;（Archive）而不是删除旧仓库。&lt;/p&gt;
&lt;p&gt;对 &lt;code&gt;sushang-v1&lt;/code&gt; 和 &lt;code&gt;sushang-v2&lt;/code&gt; 在 GitHub 上的仓库，分别执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;更新仓库描述&lt;/strong&gt;：在仓库主页点击 “Edit”，修改描述，明确指出项目已归档，并提供新仓库 &lt;code&gt;sushang-combined&lt;/code&gt; 的链接。例如：“**[ARCHIVED]** Development continues at [link to sushang-combined].”&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新 README&lt;/strong&gt;：在 &lt;code&gt;README.md&lt;/code&gt; 文件顶部添加醒目通知，引导访问者前往新仓库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行归档&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;进入仓库的 &lt;code&gt;Settings&lt;/code&gt; 页面。&lt;/li&gt;
&lt;li&gt;滚动到底部的 &lt;code&gt;Danger Zone&lt;/code&gt;（危险区域）。&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;Archive this repository&lt;/code&gt;（归档此仓库）。&lt;/li&gt;
&lt;li&gt;按提示输入仓库名称进行确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至此，您已成功将两个独立仓库完整地合并为一个，并完成了所有后续整理工作。&lt;/p&gt;
</content>
        <category term="Git" />
        <category term="Monorepo" />
        <category term="DevOps" />
        <updated>2025-06-26T02:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2023/07/06/58.%20git%20%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%AB%AF%202%20%E4%B8%AA%E4%BB%93%E5%BA%93/</id>
        <title>git 同时推送本地代码到远端 2 个仓库</title>
        <link rel="alternate" href="https://nightingalewk.cn/2023/07/06/58.%20git%20%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%AB%AF%202%20%E4%B8%AA%E4%BB%93%E5%BA%93/"/>
        <content type="html">&lt;p&gt;本地代码执行如下命令，可将代码同时提交到 github 和 coding 两个平台：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add -A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &amp;quot;初始化项目&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git branch -M main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin git@github.com:NightingaleWK/jiepade.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-url --add origin git@e.coding.net:nightingalewk/jiepade/v1.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2023-07-06T00:36:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2023/03/28/55.%20%E8%A7%A3%E5%86%B3%20.gitignore%20%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</id>
        <title>解决 .gitignore 无效的问题</title>
        <link rel="alternate" href="https://nightingalewk.cn/2023/03/28/55.%20%E8%A7%A3%E5%86%B3%20.gitignore%20%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;p&gt;首先确定好需要忽略的文件或文件夹，并加入到 .gitignore 中，然后执行：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git rm -r --cached .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &amp;quot;update .gitignore&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若你的另一台机子也需要更新代码，那么他在 git pull 的时候，.gitignore 中你刚才添加的文件和文件夹都会删除，记得重新生成或新建上。&lt;/p&gt;
</content>
        <category term="debug" />
        <updated>2023-03-28T00:38:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2022/07/26/42.%20%E5%9C%A8%20GIT%20%E4%B8%AD%20%E4%BD%BF%E7%94%A8%20GPG%20%E7%AD%BE%E5%90%8D/</id>
        <title>在 GIT 中 使用 GPG 签名</title>
        <link rel="alternate" href="https://nightingalewk.cn/2022/07/26/42.%20%E5%9C%A8%20GIT%20%E4%B8%AD%20%E4%BD%BF%E7%94%A8%20GPG%20%E7%AD%BE%E5%90%8D/"/>
        <content type="html">&lt;p&gt;本文将介绍如何在 coding 中使用 GPG 签名加密你的每次 commit，来保证代码提交的真实性&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;1-电脑安装-GPG-组件&#34;&gt;&lt;a href=&#34;#1-电脑安装-GPG-组件&#34; class=&#34;headerlink&#34; title=&#34;1. 电脑安装 GPG 组件&#34;&gt;&lt;/a&gt;1. 电脑安装 GPG 组件&lt;/h2&gt;&lt;p&gt;这里我选择的是 gpg4win ，直接去官网下载安装即可&lt;/p&gt;
&lt;h2 id=&#34;2-新建密钥对&#34;&gt;&lt;a href=&#34;#2-新建密钥对&#34; class=&#34;headerlink&#34; title=&#34;2. 新建密钥对&#34;&gt;&lt;/a&gt;2. 新建密钥对&lt;/h2&gt;&lt;p&gt;新建一个密钥对，填写你的姓名和邮箱，这里的邮箱填写的是你 coding 的邮箱，一路下一步即可&lt;/p&gt;
&lt;h2 id=&#34;3-配置-gpg-信息到-coding-中&#34;&gt;&lt;a href=&#34;#3-配置-gpg-信息到-coding-中&#34; class=&#34;headerlink&#34; title=&#34;3. 配置 gpg 信息到 coding 中&#34;&gt;&lt;/a&gt;3. 配置 gpg 信息到 coding 中&lt;/h2&gt;&lt;p&gt;转到项目上，打开终端，首先确认私钥代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gpg --list-secret-keys --keyid-format LONG &amp;quot;your_email&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;复制以 sec 开头的 GPG 密钥 ID。以下示例中，复制 4AEA00A342C24CA3：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sec   ed25519/4AEA00A342C24CA3 2021-09-14 [SC]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      6DE3507E82DEB6E8828FAAC34AEA00A342C24BD4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uid                 [ 绝对 ] your_name &amp;quot;your_email&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssb   cv25519/812B586FD245B560 2021-09-14 [E]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;利用复制的 ID 导出该 ID 的公钥（以上述 ID 为例）：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gpg --armor --export 4AEA00A342C24CA3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成公钥之后，可将其添加至你的 CODING 账户。&lt;/p&gt;
&lt;h2 id=&#34;4-配置-gpg-信息到本地-git-中&#34;&gt;&lt;a href=&#34;#4-配置-gpg-信息到本地-git-中&#34; class=&#34;headerlink&#34; title=&#34;4. 配置 gpg 信息到本地 git 中&#34;&gt;&lt;/a&gt;4. 配置 gpg 信息到本地 git 中&lt;/h2&gt;</content>
        <category term="gpg" />
        <updated>2022-07-26T09:45:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2021/12/21/36.%20Git%20Pull%20%E5%BC%BA%E5%88%B6%E6%8B%89%E5%8F%96%E6%AD%A5%E9%AA%A4/</id>
        <title>Git Pull 强制拉取步骤</title>
        <link rel="alternate" href="https://nightingalewk.cn/2021/12/21/36.%20Git%20Pull%20%E5%BC%BA%E5%88%B6%E6%8B%89%E5%8F%96%E6%AD%A5%E9%AA%A4/"/>
        <content type="html">&lt;h2 id=&#34;生成公钥&#34;&gt;&lt;a href=&#34;#生成公钥&#34; class=&#34;headerlink&#34; title=&#34;生成公钥&#34;&gt;&lt;/a&gt;生成公钥&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;注意:该命令直接放弃所有修改代码,并更新到版本库最新版本代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;git fetch –all&lt;br&gt;git reset –hard origin&amp;#x2F;main&lt;br&gt;git pull&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;合起来就是&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;git fetch –all &amp;amp;&amp;amp; git reset –hard origin&amp;#x2F;main &amp;amp;&amp;amp; git pull&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
注意: ``git reset --hard origin/分支代码``, 一般都是主干,若有多期工程, 需自己更改
&lt;/code&gt;&lt;/pre&gt;
</content>
        <updated>2021-12-21T04:21:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2021/12/15/35.%20Coding%20%E6%97%A0%E5%AF%86%E7%A0%81%E6%8E%A8%E6%8B%89%E4%BB%A3%E7%A0%81%E7%9A%84%E6%96%B9%E6%B3%95/</id>
        <title>Coding 无密码推拉代码的方法</title>
        <link rel="alternate" href="https://nightingalewk.cn/2021/12/15/35.%20Coding%20%E6%97%A0%E5%AF%86%E7%A0%81%E6%8E%A8%E6%8B%89%E4%BB%A3%E7%A0%81%E7%9A%84%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;h2 id=&#34;生成公钥&#34;&gt;&lt;a href=&#34;#生成公钥&#34; class=&#34;headerlink&#34; title=&#34;生成公钥&#34;&gt;&lt;/a&gt;生成公钥&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 创建新的 SSH 私钥与公钥秘钥对，输入你的邮箱作为标签&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -m PEM -t rsa -b 4096 -C &amp;quot;your.email@example.com&amp;quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 推荐使用默认地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 此处直接回车即可；若设置密码，则每次使用 SSH 方式推送代码时都会要求输入密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Enter passphrase (empty for no passphrase):  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;添加公钥&#34;&gt;&lt;a href=&#34;#添加公钥&#34; class=&#34;headerlink&#34; title=&#34;添加公钥&#34;&gt;&lt;/a&gt;添加公钥&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开上文中生成的秘钥对的地址（通常为 ~&amp;#x2F;.ssh&amp;#x2F;）找到后缀为 pub 的公钥文件，使用 cat 命令输出所有内容并复制。&lt;/li&gt;
&lt;li&gt;登录 CODING，点击右上角个人头像进入「个人账户设置」-&amp;gt;「SSH 公钥」页面，然后点击新建公钥按钮，粘贴复制的公钥全文。&lt;/li&gt;
&lt;li&gt;完成后，在本地运行首次连接时的公钥认证命令： &lt;code&gt;ssh -T git@e.coding.net&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="免密" />
        <updated>2021-12-15T05:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2021/09/06/29.%20Git%20%E7%AA%81%E7%84%B6%E6%97%A0%E6%B3%95%20push%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
        <title>Git 突然无法 push 的解决方法</title>
        <link rel="alternate" href="https://nightingalewk.cn/2021/09/06/29.%20Git%20%E7%AA%81%E7%84%B6%E6%97%A0%E6%B3%95%20push%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
        <content type="html">&lt;p&gt;当你明明用得好好的 git 突然无法推送，提示如下信息：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vagrant@homestead:~/code/jianbing$ git push&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;identity_sign: private key /home/vagrant/.ssh/id_rsa contents do not match public&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git@e.coding.net: Permission denied (publickey).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fatal: Could not read from remote repository.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Please make sure you have the correct access rights&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;and the repository exists.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;只需要重新进行一些配置即可恢复 push，代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &amp;quot;Your Name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email your@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eval &amp;quot;$(ssh-agent -s)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-add ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后就可以和往常一样的 git push 了&lt;/p&gt;
</content>
        <updated>2021-09-06T04:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2021/08/09/27.%20%E8%A7%A3%E5%86%B3%20ohmyzsh%20%E8%AF%BB%E5%8F%96%20git%20%E4%BF%A1%E6%81%AF%E7%BC%93%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</id>
        <title>解决 ohmyzsh 读取 git 信息缓慢的问题</title>
        <link rel="alternate" href="https://nightingalewk.cn/2021/08/09/27.%20%E8%A7%A3%E5%86%B3%20ohmyzsh%20%E8%AF%BB%E5%8F%96%20git%20%E4%BF%A1%E6%81%AF%E7%BC%93%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;p&gt;在 oh-my-zsh 进入包含 git 仓库目录时，会变的比平时慢&amp;#x2F;卡顿，原因是因为 oh-my-zsh 要获取 git 更新信息，设置 oh-my-zsh 不读取文件变化信息（在 git 项目目录执行下列命令）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git config --add oh-my-zsh.hide-dirty 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果你还觉得慢，可以再设置 oh-my-zsh 不读取任何 git 信息&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git config --add oh-my-zsh.hide-status 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想恢复，设置成0就好&lt;/p&gt;
</content>
        <category term="oh-my-zsh" />
        <updated>2021-08-09T04:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://nightingalewk.cn/2021/08/03/26.%20git%20pull%20%E5%90%8E%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9B%9E%E6%BB%9A/</id>
        <title>git pull 后如何快速回滚</title>
        <link rel="alternate" href="https://nightingalewk.cn/2021/08/03/26.%20git%20pull%20%E5%90%8E%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9B%9E%E6%BB%9A/"/>
        <content type="html">&lt;p&gt;在服务器执行 &lt;code&gt;git pull&lt;/code&gt; 后发现生产环境报错，急需回滚到上一个安全版本，这时候我们需要运行 &lt;code&gt;git reflog&lt;/code&gt; 命令查看你的历史变更记录&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@user www.xxx.com]# git reflog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;efb4b67 HEAD@&amp;#123;0&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fb7675d HEAD@&amp;#123;1&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77d8371 HEAD@&amp;#123;2&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3fa69a3 HEAD@&amp;#123;3&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fa72965 HEAD@&amp;#123;4&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ffe128e HEAD@&amp;#123;5&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c511308 HEAD@&amp;#123;6&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ef21f31 HEAD@&amp;#123;7&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8082a1b HEAD@&amp;#123;8&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7551f60 HEAD@&amp;#123;9&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0486156 HEAD@&amp;#123;10&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2be1fb0 HEAD@&amp;#123;11&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b3aec43 HEAD@&amp;#123;12&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c3318a4 HEAD@&amp;#123;13&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8ab54e1 HEAD@&amp;#123;14&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;966c7ae HEAD@&amp;#123;15&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2e8a177 HEAD@&amp;#123;16&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5800282 HEAD@&amp;#123;17&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3e70800 HEAD@&amp;#123;18&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e4f45d9 HEAD@&amp;#123;19&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9069d11 HEAD@&amp;#123;20&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8b45ce5 HEAD@&amp;#123;21&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95a2d13 HEAD@&amp;#123;22&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d6ac3b6 HEAD@&amp;#123;23&amp;#125;: reset: moving to origin/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99213c9 HEAD@&amp;#123;24&amp;#125;: pull: Fast-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d9b90ca HEAD@&amp;#123;25&amp;#125;: reset: moving to origin/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d7258c4 HEAD@&amp;#123;26&amp;#125;: clone: from https://e.coding.net/xxxxxxxxxxxxxxxxxxxxxx.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最上面的那条记录就是问题的那次，我们需要回滚到上一次，即 &lt;code&gt;fb7675d&lt;/code&gt; 这里，输入如下指令即可：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git reset --hard fb7675d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2021-08-03T04:00:00.000Z</updated>
    </entry>
</feed>
